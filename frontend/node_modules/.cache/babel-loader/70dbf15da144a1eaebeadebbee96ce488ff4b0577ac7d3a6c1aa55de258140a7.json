{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport backendApi from '../api/backendApi'; // Import the API module\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  // Check if token exists and is valid\n  const checkUserLoggedIn = async () => {\n    setIsLoading(true);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setIsLoading(false);\n      return;\n    }\n    try {\n      // Check if token is expired\n      const decoded = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp < currentTime) {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setUser(null);\n        setIsLoading(false);\n        return;\n      }\n\n      // Set global axios default\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Use the imported API module which has the token interceptor\n      try {\n        const response = await backendApi.getCurrentUser();\n        setUser(response.data);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    setIsLoading(false);\n  };\n\n  // Register user\n  const register = async userData => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('Attempting to register with:', {\n        username: userData.username,\n        email: userData.email,\n        password: userData.password ? '*****' : 'empty'\n      });\n      const response = await backendApi.register(userData);\n      console.log('Registration response:', response.data);\n      const token = response.data.token;\n      console.log('Token received:', token ? `${token.substring(0, 15)}...` : 'No token');\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user data manually instead of calling checkUserLoggedIn\n      const userId = response.data.user_id;\n      setUser({\n        user_id: userId,\n        username: userData.username,\n        email: userData.email,\n        role: 'user' // Default role for new registrations\n      });\n      setIsAuthenticated(true);\n      navigate('/subscriptions');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('Attempting login with credentials:', {\n        username: credentials.username,\n        password: credentials.password ? '*****' : 'empty'\n      });\n\n      // Use backendApi which has token interceptor setup\n      const response = await backendApi.login(credentials);\n      console.log('Login response received:', {\n        status: response.status\n      });\n      const token = response.data.token;\n      console.log('Token received:', token ? `${token.substring(0, 15)}...` : 'No token');\n      if (!token) {\n        console.error('No token received in login response');\n        setError('Authentication failed: No token received');\n        setIsLoading(false);\n        return false;\n      }\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      try {\n        // Get current user data after login with proper authorization header\n        console.log('Fetching user data after login');\n        const userResponse = await backendApi.getCurrentUser();\n        console.log('User data received:', userResponse.data);\n        const userData = userResponse.data;\n        setUser(userData);\n        setIsAuthenticated(true);\n\n        // Redirect based on user role\n        if (userData.role === 'admin' || userData.role === 'superadmin') {\n          navigate('/admin');\n        } else {\n          navigate('/browse');\n        }\n        return true;\n      } catch (userError) {\n        console.error('Error fetching user data after login:', userError);\n\n        // Even if user fetch fails, we're still logged in with a token\n        // Set minimal user data based on the login response\n        const minimalUserData = {\n          user_id: response.data.user_id,\n          username: response.data.username,\n          email: response.data.email,\n          role: response.data.role\n        };\n        console.log('Setting minimal user data:', minimalUserData);\n        setUser(minimalUserData);\n        setIsAuthenticated(true);\n\n        // Redirect based on role from login response\n        if (response.data.role === 'admin' || response.data.role === 'superadmin') {\n          navigate('/admin');\n        } else {\n          navigate('/browse');\n        }\n        return true;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n\n      // Enhanced error logging\n      if (error.response) {\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n        setError(error.response.data.message || 'Login failed');\n      } else if (error.request) {\n        console.error('Error request:', error.request);\n        setError('No response received from server. Please try again later.');\n      } else {\n        console.error('Error message:', error.message);\n        setError(error.message || 'Login failed');\n      }\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  // Check if user has active subscription\n  const checkSubscription = async () => {\n    if (!isAuthenticated) return false;\n    try {\n      const response = await backendApi.checkSubscription();\n\n      // Update user data with subscription info\n      setUser(prevUser => ({\n        ...prevUser,\n        hasSubscription: response.data.hasSubscription,\n        hasAccessCode: response.data.hasAccessCode,\n        subscription: response.data.subscription\n      }));\n      return response.data.hasSubscription || response.data.hasAccessCode;\n    } catch (error) {\n      console.error('Error checking subscription:', error);\n      return false;\n    }\n  };\n\n  // Generate access code\n  const generateAccessCode = async () => {\n    if (!isAuthenticated || !user.hasSubscription) return {\n      success: false\n    };\n    try {\n      const response = await backendApi.generateAccessCode();\n      return {\n        success: true,\n        code: response.data.code\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to generate access code');\n      return {\n        success: false\n      };\n    }\n  };\n\n  // Redeem access code\n  const redeemAccessCode = async code => {\n    try {\n      const response = await backendApi.redeemAccessCode(code);\n\n      // Update user data with access code info\n      setUser(prevUser => ({\n        ...prevUser,\n        hasAccessCode: true,\n        accessCode: response.data.accessCode\n      }));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to redeem access code');\n      return {\n        success: false,\n        error: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isLoading,\n      error,\n      register,\n      login,\n      logout,\n      checkSubscription,\n      generateAccessCode,\n      redeemAccessCode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"zLYyaohv+2jt6toekfB94sM7wlM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","axios","jwtDecode","backendApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","navigate","checkUserLoggedIn","token","localStorage","getItem","decoded","currentTime","Date","now","exp","removeItem","defaults","headers","common","response","getCurrentUser","data","console","register","userData","log","username","email","password","substring","setItem","userId","user_id","role","_error$response","_error$response$data","message","login","credentials","status","userResponse","userError","minimalUserData","request","logout","checkSubscription","prevUser","hasSubscription","hasAccessCode","subscription","generateAccessCode","success","code","_error$response2","_error$response2$data","redeemAccessCode","accessCode","_error$response3","_error$response3$data","_error$response4","_error$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Movie/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport backendApi from '../api/backendApi';  // Import the API module\r\n\r\n// Create auth context\r\nexport const AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is already logged in on mount\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  // Check if token exists and is valid\r\n  const checkUserLoggedIn = async () => {\r\n    setIsLoading(true);\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Check if token is expired\r\n      const decoded = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      if (decoded.exp < currentTime) {\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Set global axios default\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Use the imported API module which has the token interceptor\r\n      try {\r\n        const response = await backendApi.getCurrentUser();\r\n        setUser(response.data);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Error checking authentication:', error);\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error decoding token:', error);\r\n      localStorage.removeItem('token');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('Attempting to register with:', { \r\n        username: userData.username,\r\n        email: userData.email,\r\n        password: userData.password ? '*****' : 'empty'\r\n      });\r\n      \r\n      const response = await backendApi.register(userData);\r\n      console.log('Registration response:', response.data);\r\n      \r\n      const token = response.data.token;\r\n      console.log('Token received:', token ? `${token.substring(0, 15)}...` : 'No token');\r\n      \r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Set user data manually instead of calling checkUserLoggedIn\r\n      const userId = response.data.user_id; \r\n      setUser({\r\n        user_id: userId,\r\n        username: userData.username,\r\n        email: userData.email,\r\n        role: 'user' // Default role for new registrations\r\n      });\r\n      setIsAuthenticated(true);\r\n      \r\n      navigate('/subscriptions');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setError(error.response?.data?.message || 'Registration failed');\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (credentials) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('Attempting login with credentials:', { \r\n        username: credentials.username, \r\n        password: credentials.password ? '*****' : 'empty' \r\n      });\r\n      \r\n      // Use backendApi which has token interceptor setup\r\n      const response = await backendApi.login(credentials);\r\n      console.log('Login response received:', { status: response.status });\r\n      \r\n      const token = response.data.token;\r\n      console.log('Token received:', token ? `${token.substring(0, 15)}...` : 'No token');\r\n      \r\n      if (!token) {\r\n        console.error('No token received in login response');\r\n        setError('Authentication failed: No token received');\r\n        setIsLoading(false);\r\n        return false;\r\n      }\r\n      \r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      try {\r\n        // Get current user data after login with proper authorization header\r\n        console.log('Fetching user data after login');\r\n        const userResponse = await backendApi.getCurrentUser();\r\n        \r\n        console.log('User data received:', userResponse.data);\r\n        const userData = userResponse.data;\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n        \r\n        // Redirect based on user role\r\n        if (userData.role === 'admin' || userData.role === 'superadmin') {\r\n          navigate('/admin');\r\n        } else {\r\n          navigate('/browse');\r\n        }\r\n        \r\n        return true;\r\n      } catch (userError) {\r\n        console.error('Error fetching user data after login:', userError);\r\n        \r\n        // Even if user fetch fails, we're still logged in with a token\r\n        // Set minimal user data based on the login response\r\n        const minimalUserData = {\r\n          user_id: response.data.user_id,\r\n          username: response.data.username,\r\n          email: response.data.email,\r\n          role: response.data.role\r\n        };\r\n        \r\n        console.log('Setting minimal user data:', minimalUserData);\r\n        setUser(minimalUserData);\r\n        setIsAuthenticated(true);\r\n        \r\n        // Redirect based on role from login response\r\n        if (response.data.role === 'admin' || response.data.role === 'superadmin') {\r\n          navigate('/admin');\r\n        } else {\r\n          navigate('/browse');\r\n        }\r\n        \r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      \r\n      // Enhanced error logging\r\n      if (error.response) {\r\n        console.error('Error response data:', error.response.data);\r\n        console.error('Error response status:', error.response.status);\r\n        console.error('Error response headers:', error.response.headers);\r\n        setError(error.response.data.message || 'Login failed');\r\n      } else if (error.request) {\r\n        console.error('Error request:', error.request);\r\n        setError('No response received from server. Please try again later.');\r\n      } else {\r\n        console.error('Error message:', error.message);\r\n        setError(error.message || 'Login failed');\r\n      }\r\n      \r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  // Check if user has active subscription\r\n  const checkSubscription = async () => {\r\n    if (!isAuthenticated) return false;\r\n    \r\n    try {\r\n      const response = await backendApi.checkSubscription();\r\n      \r\n      // Update user data with subscription info\r\n      setUser(prevUser => ({\r\n        ...prevUser,\r\n        hasSubscription: response.data.hasSubscription,\r\n        hasAccessCode: response.data.hasAccessCode,\r\n        subscription: response.data.subscription\r\n      }));\r\n      \r\n      return response.data.hasSubscription || response.data.hasAccessCode;\r\n    } catch (error) {\r\n      console.error('Error checking subscription:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Generate access code\r\n  const generateAccessCode = async () => {\r\n    if (!isAuthenticated || !user.hasSubscription) return { success: false };\r\n    \r\n    try {\r\n      const response = await backendApi.generateAccessCode();\r\n      return { success: true, code: response.data.code };\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Failed to generate access code');\r\n      return { success: false };\r\n    }\r\n  };\r\n\r\n  // Redeem access code\r\n  const redeemAccessCode = async (code) => {\r\n    try {\r\n      const response = await backendApi.redeemAccessCode(code);\r\n      \r\n      // Update user data with access code info\r\n      setUser(prevUser => ({\r\n        ...prevUser,\r\n        hasAccessCode: true,\r\n        accessCode: response.data.accessCode\r\n      }));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Failed to redeem access code');\r\n      return { success: false, error: error.response?.data?.message };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        isAuthenticated,\r\n        isLoading,\r\n        error,\r\n        register,\r\n        login,\r\n        logout,\r\n        checkSubscription,\r\n        generateAccessCode,\r\n        redeemAccessCode\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAE;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMoB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACdoB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCJ,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVL,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,IAAI;MACF;MACA,MAAMQ,OAAO,GAAGrB,SAAS,CAACkB,KAAK,CAAC;MAChC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;MAErC,IAAIH,OAAO,CAACI,GAAG,GAAGH,WAAW,EAAE;QAC7BH,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCf,kBAAkB,CAAC,KAAK,CAAC;QACzBF,OAAO,CAAC,IAAI,CAAC;QACbI,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;;MAEA;MACAd,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUX,KAAK,EAAE;;MAElE;MACA,IAAI;QACF,MAAMY,QAAQ,GAAG,MAAM7B,UAAU,CAAC8B,cAAc,CAAC,CAAC;QAClDtB,OAAO,CAACqB,QAAQ,CAACE,IAAI,CAAC;QACtBrB,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdmB,OAAO,CAACnB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDK,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChC,OAAO3B,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;QACrDpB,OAAO,CAAC,IAAI,CAAC;QACbE,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CK,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO3B,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACrDpB,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;IAC3B;IAEAE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMqB,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnCtB,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFkB,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAE;QAC1CC,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;QAC3BC,KAAK,EAAEH,QAAQ,CAACG,KAAK;QACrBC,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ,GAAG,OAAO,GAAG;MAC1C,CAAC,CAAC;MAEF,MAAMT,QAAQ,GAAG,MAAM7B,UAAU,CAACiC,QAAQ,CAACC,QAAQ,CAAC;MACpDF,OAAO,CAACG,GAAG,CAAC,wBAAwB,EAAEN,QAAQ,CAACE,IAAI,CAAC;MAEpD,MAAMd,KAAK,GAAGY,QAAQ,CAACE,IAAI,CAACd,KAAK;MACjCe,OAAO,CAACG,GAAG,CAAC,iBAAiB,EAAElB,KAAK,GAAG,GAAGA,KAAK,CAACsB,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC;MAEnFrB,YAAY,CAACsB,OAAO,CAAC,OAAO,EAAEvB,KAAK,CAAC;MACpCnB,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUX,KAAK,EAAE;;MAElE;MACA,MAAMwB,MAAM,GAAGZ,QAAQ,CAACE,IAAI,CAACW,OAAO;MACpClC,OAAO,CAAC;QACNkC,OAAO,EAAED,MAAM;QACfL,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;QAC3BC,KAAK,EAAEH,QAAQ,CAACG,KAAK;QACrBM,IAAI,EAAE,MAAM,CAAC;MACf,CAAC,CAAC;MACFjC,kBAAkB,CAAC,IAAI,CAAC;MAExBK,QAAQ,CAAC,gBAAgB,CAAC;MAC1B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOF,KAAK,EAAE;MAAA,IAAA+B,eAAA,EAAAC,oBAAA;MACdb,OAAO,CAACnB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,EAAA8B,eAAA,GAAA/B,KAAK,CAACgB,QAAQ,cAAAe,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBb,IAAI,cAAAc,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,qBAAqB,CAAC;MAChE,OAAO,KAAK;IACd,CAAC,SAAS;MACRlC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMmC,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnCpC,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFkB,OAAO,CAACG,GAAG,CAAC,oCAAoC,EAAE;QAChDC,QAAQ,EAAEY,WAAW,CAACZ,QAAQ;QAC9BE,QAAQ,EAAEU,WAAW,CAACV,QAAQ,GAAG,OAAO,GAAG;MAC7C,CAAC,CAAC;;MAEF;MACA,MAAMT,QAAQ,GAAG,MAAM7B,UAAU,CAAC+C,KAAK,CAACC,WAAW,CAAC;MACpDhB,OAAO,CAACG,GAAG,CAAC,0BAA0B,EAAE;QAAEc,MAAM,EAAEpB,QAAQ,CAACoB;MAAO,CAAC,CAAC;MAEpE,MAAMhC,KAAK,GAAGY,QAAQ,CAACE,IAAI,CAACd,KAAK;MACjCe,OAAO,CAACG,GAAG,CAAC,iBAAiB,EAAElB,KAAK,GAAG,GAAGA,KAAK,CAACsB,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC;MAEnF,IAAI,CAACtB,KAAK,EAAE;QACVe,OAAO,CAACnB,KAAK,CAAC,qCAAqC,CAAC;QACpDC,QAAQ,CAAC,0CAA0C,CAAC;QACpDF,YAAY,CAAC,KAAK,CAAC;QACnB,OAAO,KAAK;MACd;MAEAM,YAAY,CAACsB,OAAO,CAAC,OAAO,EAAEvB,KAAK,CAAC;MACpCnB,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUX,KAAK,EAAE;MAElE,IAAI;QACF;QACAe,OAAO,CAACG,GAAG,CAAC,gCAAgC,CAAC;QAC7C,MAAMe,YAAY,GAAG,MAAMlD,UAAU,CAAC8B,cAAc,CAAC,CAAC;QAEtDE,OAAO,CAACG,GAAG,CAAC,qBAAqB,EAAEe,YAAY,CAACnB,IAAI,CAAC;QACrD,MAAMG,QAAQ,GAAGgB,YAAY,CAACnB,IAAI;QAClCvB,OAAO,CAAC0B,QAAQ,CAAC;QACjBxB,kBAAkB,CAAC,IAAI,CAAC;;QAExB;QACA,IAAIwB,QAAQ,CAACS,IAAI,KAAK,OAAO,IAAIT,QAAQ,CAACS,IAAI,KAAK,YAAY,EAAE;UAC/D5B,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM;UACLA,QAAQ,CAAC,SAAS,CAAC;QACrB;QAEA,OAAO,IAAI;MACb,CAAC,CAAC,OAAOoC,SAAS,EAAE;QAClBnB,OAAO,CAACnB,KAAK,CAAC,uCAAuC,EAAEsC,SAAS,CAAC;;QAEjE;QACA;QACA,MAAMC,eAAe,GAAG;UACtBV,OAAO,EAAEb,QAAQ,CAACE,IAAI,CAACW,OAAO;UAC9BN,QAAQ,EAAEP,QAAQ,CAACE,IAAI,CAACK,QAAQ;UAChCC,KAAK,EAAER,QAAQ,CAACE,IAAI,CAACM,KAAK;UAC1BM,IAAI,EAAEd,QAAQ,CAACE,IAAI,CAACY;QACtB,CAAC;QAEDX,OAAO,CAACG,GAAG,CAAC,4BAA4B,EAAEiB,eAAe,CAAC;QAC1D5C,OAAO,CAAC4C,eAAe,CAAC;QACxB1C,kBAAkB,CAAC,IAAI,CAAC;;QAExB;QACA,IAAImB,QAAQ,CAACE,IAAI,CAACY,IAAI,KAAK,OAAO,IAAId,QAAQ,CAACE,IAAI,CAACY,IAAI,KAAK,YAAY,EAAE;UACzE5B,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM;UACLA,QAAQ,CAAC,SAAS,CAAC;QACrB;QAEA,OAAO,IAAI;MACb;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;;MAEpC;MACA,IAAIA,KAAK,CAACgB,QAAQ,EAAE;QAClBG,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACgB,QAAQ,CAACE,IAAI,CAAC;QAC1DC,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACgB,QAAQ,CAACoB,MAAM,CAAC;QAC9DjB,OAAO,CAACnB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACgB,QAAQ,CAACF,OAAO,CAAC;QAChEb,QAAQ,CAACD,KAAK,CAACgB,QAAQ,CAACE,IAAI,CAACe,OAAO,IAAI,cAAc,CAAC;MACzD,CAAC,MAAM,IAAIjC,KAAK,CAACwC,OAAO,EAAE;QACxBrB,OAAO,CAACnB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACwC,OAAO,CAAC;QAC9CvC,QAAQ,CAAC,2DAA2D,CAAC;MACvE,CAAC,MAAM;QACLkB,OAAO,CAACnB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACiC,OAAO,CAAC;QAC9ChC,QAAQ,CAACD,KAAK,CAACiC,OAAO,IAAI,cAAc,CAAC;MAC3C;MAEA,OAAO,KAAK;IACd,CAAC,SAAS;MACRlC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAM0C,MAAM,GAAGA,CAAA,KAAM;IACnBpC,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO3B,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACrDpB,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;IACzBK,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAMwC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC9C,eAAe,EAAE,OAAO,KAAK;IAElC,IAAI;MACF,MAAMoB,QAAQ,GAAG,MAAM7B,UAAU,CAACuD,iBAAiB,CAAC,CAAC;;MAErD;MACA/C,OAAO,CAACgD,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACXC,eAAe,EAAE5B,QAAQ,CAACE,IAAI,CAAC0B,eAAe;QAC9CC,aAAa,EAAE7B,QAAQ,CAACE,IAAI,CAAC2B,aAAa;QAC1CC,YAAY,EAAE9B,QAAQ,CAACE,IAAI,CAAC4B;MAC9B,CAAC,CAAC,CAAC;MAEH,OAAO9B,QAAQ,CAACE,IAAI,CAAC0B,eAAe,IAAI5B,QAAQ,CAACE,IAAI,CAAC2B,aAAa;IACrE,CAAC,CAAC,OAAO7C,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAM+C,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACnD,eAAe,IAAI,CAACF,IAAI,CAACkD,eAAe,EAAE,OAAO;MAAEI,OAAO,EAAE;IAAM,CAAC;IAExE,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAM7B,UAAU,CAAC4D,kBAAkB,CAAC,CAAC;MACtD,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAEjC,QAAQ,CAACE,IAAI,CAAC+B;MAAK,CAAC;IACpD,CAAC,CAAC,OAAOjD,KAAK,EAAE;MAAA,IAAAkD,gBAAA,EAAAC,qBAAA;MACdlD,QAAQ,CAAC,EAAAiD,gBAAA,GAAAlD,KAAK,CAACgB,QAAQ,cAAAkC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhC,IAAI,cAAAiC,qBAAA,uBAApBA,qBAAA,CAAsBlB,OAAO,KAAI,gCAAgC,CAAC;MAC3E,OAAO;QAAEe,OAAO,EAAE;MAAM,CAAC;IAC3B;EACF,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAG,MAAOH,IAAI,IAAK;IACvC,IAAI;MACF,MAAMjC,QAAQ,GAAG,MAAM7B,UAAU,CAACiE,gBAAgB,CAACH,IAAI,CAAC;;MAExD;MACAtD,OAAO,CAACgD,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACXE,aAAa,EAAE,IAAI;QACnBQ,UAAU,EAAErC,QAAQ,CAACE,IAAI,CAACmC;MAC5B,CAAC,CAAC,CAAC;MAEH,OAAO;QAAEL,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOhD,KAAK,EAAE;MAAA,IAAAsD,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdxD,QAAQ,CAAC,EAAAqD,gBAAA,GAAAtD,KAAK,CAACgB,QAAQ,cAAAsC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpC,IAAI,cAAAqC,qBAAA,uBAApBA,qBAAA,CAAsBtB,OAAO,KAAI,8BAA8B,CAAC;MACzE,OAAO;QAAEe,OAAO,EAAE,KAAK;QAAEhD,KAAK,GAAAwD,gBAAA,GAAExD,KAAK,CAACgB,QAAQ,cAAAwC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBtC,IAAI,cAAAuC,qBAAA,uBAApBA,qBAAA,CAAsBxB;MAAQ,CAAC;IACjE;EACF,CAAC;EAED,oBACE5C,OAAA,CAACC,WAAW,CAACoE,QAAQ;IACnBC,KAAK,EAAE;MACLjE,IAAI;MACJE,eAAe;MACfE,SAAS;MACTE,KAAK;MACLoB,QAAQ;MACRc,KAAK;MACLO,MAAM;MACNC,iBAAiB;MACjBK,kBAAkB;MAClBK;IACF,CAAE;IAAA5D,QAAA,EAEDA;EAAQ;IAAAoE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtE,EAAA,CAtRWF,YAAY;EAAA,QAKNP,WAAW;AAAA;AAAAgF,EAAA,GALjBzE,YAAY;AAAA,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}