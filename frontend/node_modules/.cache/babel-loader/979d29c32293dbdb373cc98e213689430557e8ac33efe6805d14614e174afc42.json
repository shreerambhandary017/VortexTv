{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\pages\\\\TvShowDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TvShowDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [tvShow, setTvShow] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(1);\n  const [episodes, setEpisodes] = useState([]);\n  const [similarShows, setSimilarShows] = useState([]);\n  useEffect(() => {\n    const fetchTvShowDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`http://localhost:5000/api/tv/${id}`);\n        setTvShow(response.data);\n\n        // Set available seasons\n        if (response.data.number_of_seasons) {\n          setSeasons(Array.from({\n            length: response.data.number_of_seasons\n          }, (_, i) => i + 1));\n        }\n\n        // Fetch episodes for the first season by default\n        const episodesResponse = await axios.get(`http://localhost:5000/api/tv/${id}/season/1`);\n        setEpisodes(episodesResponse.data.episodes);\n\n        // Fetch similar TV shows\n        const similarResponse = await axios.get(`http://localhost:5000/api/tv/${id}/similar`);\n        setSimilarShows(similarResponse.data.slice(0, 6));\n      } catch (err) {\n        console.error('Error fetching TV show details:', err);\n        setError('Failed to load TV show details. Please try again later.');\n\n        // Set dummy data for development/preview\n        setTvShow({\n          id: parseInt(id),\n          name: 'Sample TV Show',\n          poster_path: `https://placehold.co/500x750?text=TV+Show+${id}`,\n          backdrop_path: `https://placehold.co/1280x720?text=TV+Show+${id}+Backdrop`,\n          first_air_date: '2020-01-15',\n          last_air_date: '2023-05-10',\n          number_of_seasons: 3,\n          number_of_episodes: 24,\n          vote_average: 8.7,\n          vote_count: 1530,\n          genres: ['Drama', 'Sci-Fi', 'Adventure'],\n          overview: 'This is a sample TV show overview. It would normally contain a description of the show premise and other relevant information.',\n          created_by: ['Creator One', 'Creator Two'],\n          cast: ['Actor One', 'Actor Two', 'Actor Three', 'Actor Four']\n        });\n\n        // Set dummy seasons\n        setSeasons([1, 2, 3]);\n\n        // Set dummy episodes\n        setEpisodes(Array(8).fill().map((_, idx) => ({\n          episode_number: idx + 1,\n          name: `Episode ${idx + 1}`,\n          overview: `This is a sample episode overview for episode ${idx + 1} of season 1.`,\n          still_path: `https://placehold.co/300x170?text=S01E${String(idx + 1).padStart(2, '0')}`,\n          air_date: '2020-01-15',\n          runtime: 45\n        })));\n\n        // Set dummy similar shows\n        setSimilarShows(Array(6).fill().map((_, idx) => ({\n          id: 2000 + idx,\n          name: `Similar Show ${idx + 1}`,\n          poster_path: `https://placehold.co/300x450?text=Similar+${idx + 1}`,\n          vote_average: (Math.random() * 2 + 7).toFixed(1)\n        })));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTvShowDetails();\n  }, [id]);\n  const handleSeasonChange = async seasonNumber => {\n    setSelectedSeason(seasonNumber);\n    try {\n      const episodesResponse = await axios.get(`http://localhost:5000/api/tv/${id}/season/${seasonNumber}`);\n      setEpisodes(episodesResponse.data.episodes);\n    } catch (err) {\n      console.error(`Error fetching episodes for season ${seasonNumber}:`, err);\n\n      // Set dummy episodes for the selected season\n      setEpisodes(Array(8).fill().map((_, idx) => ({\n        episode_number: idx + 1,\n        name: `Episode ${idx + 1}`,\n        overview: `This is a sample episode overview for episode ${idx + 1} of season ${seasonNumber}.`,\n        still_path: `https://placehold.co/300x170?text=S${String(seasonNumber).padStart(2, '0')}E${String(idx + 1).padStart(2, '0')}`,\n        air_date: '2020-01-15',\n        runtime: 45\n      })));\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: \"Loading TV show details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  if (!tvShow && !loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-6\",\n        children: \"TV show not found or has been removed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/browse\",\n        className: \"text-red-600 hover:underline\",\n        children: \"\\u2190 Back to Browse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aspect-[21/9] bg-cover bg-center\",\n        style: {\n          backgroundImage: `url(${tvShow.backdrop_path})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-gradient-to-t from-black to-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-12\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-6\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:w-1/3 lg:w-1/4 mb-8 md:mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tvShow.poster_path,\n            alt: tvShow.name,\n            className: \"w-full rounded-lg shadow-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:w-2/3 lg:w-3/4 md:pl-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl md:text-4xl font-bold mb-2\",\n            children: tvShow.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4 text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-4\",\n              children: new Date(tvShow.first_air_date).getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-4\",\n              children: [tvShow.number_of_seasons, \" Seasons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-4\",\n              children: [tvShow.number_of_episodes, \" Episodes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex items-center text-yellow-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 mr-1\",\n                fill: \"currentColor\",\n                viewBox: \"0 0 20 20\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), tvShow.vote_average, \" (\", tvShow.vote_count, \" votes)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: tvShow.genres && tvShow.genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\",\n              children: genre\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700\",\n              children: tvShow.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), tvShow.created_by && tvShow.created_by.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Created By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700\",\n              children: tvShow.created_by.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), tvShow.cast && tvShow.cast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap\",\n              children: tvShow.cast.map((actor, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inline-block bg-gray-100 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\",\n                children: actor\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-3 mt-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-md font-medium transition-colors\",\n              children: \"Watch Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-200 hover:bg-gray-300 text-gray-800 px-6 py-2 rounded-md font-medium transition-colors\",\n              children: \"Add to Favorites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold\",\n            children: \"Episodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-3 text-gray-700\",\n              children: \"Season:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedSeason,\n              onChange: e => handleSeasonChange(parseInt(e.target.value)),\n              className: \"border border-gray-300 rounded-md shadow-sm focus:border-red-500 focus:ring-red-500\",\n              children: seasons.map(seasonNum => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: seasonNum,\n                children: [\"Season \", seasonNum]\n              }, seasonNum, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: episodes.map(episode => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col md:flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md:w-1/4\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: episode.still_path,\n                  alt: `${tvShow.name} S${selectedSeason}E${episode.episode_number}`,\n                  className: \"w-full h-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 md:w-3/4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: [\"S\", selectedSeason, \" E\", episode.episode_number, \" \\u2022 \", episode.runtime, \" min \\u2022 \", new Date(episode.air_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-bold mb-2\",\n                  children: episode.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: episode.overview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mt-4 text-red-600 hover:text-red-700 font-medium flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-5 h-5 mr-1\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 20 20\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      fillRule: \"evenodd\",\n                      d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\",\n                      clipRule: \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this), \"Watch Episode\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, episode.episode_number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), similarShows.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6\",\n          children: \"Similar Shows You Might Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-6\",\n          children: similarShows.map(show => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tv/${show.id}`,\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative overflow-hidden rounded-lg mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: show.poster_path,\n                alt: show.name,\n                className: \"w-full h-auto transition-transform duration-300 group-hover:scale-105\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-0 right-0 bg-black bg-opacity-75 text-yellow-400 p-1 text-sm\",\n                children: [\"\\u2605 \", show.vote_average]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium truncate\",\n              children: show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, show.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(TvShowDetails, \"Xu6GcWF8sdy9HPTTY8ZKCaFEmaA=\", false, function () {\n  return [useParams];\n});\n_c = TvShowDetails;\nexport default TvShowDetails;\nvar _c;\n$RefreshReg$(_c, \"TvShowDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","jsxDEV","_jsxDEV","TvShowDetails","_s","id","tvShow","setTvShow","loading","setLoading","error","setError","seasons","setSeasons","selectedSeason","setSelectedSeason","episodes","setEpisodes","similarShows","setSimilarShows","fetchTvShowDetails","response","get","data","number_of_seasons","Array","from","length","_","i","episodesResponse","similarResponse","slice","err","console","parseInt","name","poster_path","backdrop_path","first_air_date","last_air_date","number_of_episodes","vote_average","vote_count","genres","overview","created_by","cast","fill","map","idx","episode_number","still_path","String","padStart","air_date","runtime","Math","random","toFixed","handleSeasonChange","seasonNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","style","backgroundImage","src","alt","Date","getFullYear","viewBox","d","genre","index","join","actor","value","onChange","e","target","seasonNum","episode","toLocaleDateString","fillRule","clipRule","show","_c","$RefreshReg$"],"sources":["D:/Movie/frontend/src/pages/TvShowDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst TvShowDetails = () => {\r\n  const { id } = useParams();\r\n  const [tvShow, setTvShow] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [seasons, setSeasons] = useState([]);\r\n  const [selectedSeason, setSelectedSeason] = useState(1);\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [similarShows, setSimilarShows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTvShowDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(`http://localhost:5000/api/tv/${id}`);\r\n        setTvShow(response.data);\r\n        \r\n        // Set available seasons\r\n        if (response.data.number_of_seasons) {\r\n          setSeasons(Array.from({ length: response.data.number_of_seasons }, (_, i) => i + 1));\r\n        }\r\n        \r\n        // Fetch episodes for the first season by default\r\n        const episodesResponse = await axios.get(`http://localhost:5000/api/tv/${id}/season/1`);\r\n        setEpisodes(episodesResponse.data.episodes);\r\n        \r\n        // Fetch similar TV shows\r\n        const similarResponse = await axios.get(`http://localhost:5000/api/tv/${id}/similar`);\r\n        setSimilarShows(similarResponse.data.slice(0, 6));\r\n      } catch (err) {\r\n        console.error('Error fetching TV show details:', err);\r\n        setError('Failed to load TV show details. Please try again later.');\r\n        \r\n        // Set dummy data for development/preview\r\n        setTvShow({\r\n          id: parseInt(id),\r\n          name: 'Sample TV Show',\r\n          poster_path: `https://placehold.co/500x750?text=TV+Show+${id}`,\r\n          backdrop_path: `https://placehold.co/1280x720?text=TV+Show+${id}+Backdrop`,\r\n          first_air_date: '2020-01-15',\r\n          last_air_date: '2023-05-10',\r\n          number_of_seasons: 3,\r\n          number_of_episodes: 24,\r\n          vote_average: 8.7,\r\n          vote_count: 1530,\r\n          genres: ['Drama', 'Sci-Fi', 'Adventure'],\r\n          overview: 'This is a sample TV show overview. It would normally contain a description of the show premise and other relevant information.',\r\n          created_by: ['Creator One', 'Creator Two'],\r\n          cast: ['Actor One', 'Actor Two', 'Actor Three', 'Actor Four']\r\n        });\r\n        \r\n        // Set dummy seasons\r\n        setSeasons([1, 2, 3]);\r\n        \r\n        // Set dummy episodes\r\n        setEpisodes(Array(8).fill().map((_, idx) => ({\r\n          episode_number: idx + 1,\r\n          name: `Episode ${idx + 1}`,\r\n          overview: `This is a sample episode overview for episode ${idx + 1} of season 1.`,\r\n          still_path: `https://placehold.co/300x170?text=S01E${String(idx + 1).padStart(2, '0')}`,\r\n          air_date: '2020-01-15',\r\n          runtime: 45\r\n        })));\r\n        \r\n        // Set dummy similar shows\r\n        setSimilarShows(Array(6).fill().map((_, idx) => ({\r\n          id: 2000 + idx,\r\n          name: `Similar Show ${idx + 1}`,\r\n          poster_path: `https://placehold.co/300x450?text=Similar+${idx+1}`,\r\n          vote_average: (Math.random() * 2 + 7).toFixed(1)\r\n        })));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchTvShowDetails();\r\n  }, [id]);\r\n\r\n  const handleSeasonChange = async (seasonNumber) => {\r\n    setSelectedSeason(seasonNumber);\r\n    \r\n    try {\r\n      const episodesResponse = await axios.get(`http://localhost:5000/api/tv/${id}/season/${seasonNumber}`);\r\n      setEpisodes(episodesResponse.data.episodes);\r\n    } catch (err) {\r\n      console.error(`Error fetching episodes for season ${seasonNumber}:`, err);\r\n      \r\n      // Set dummy episodes for the selected season\r\n      setEpisodes(Array(8).fill().map((_, idx) => ({\r\n        episode_number: idx + 1,\r\n        name: `Episode ${idx + 1}`,\r\n        overview: `This is a sample episode overview for episode ${idx + 1} of season ${seasonNumber}.`,\r\n        still_path: `https://placehold.co/300x170?text=S${String(seasonNumber).padStart(2, '0')}E${String(idx + 1).padStart(2, '0')}`,\r\n        air_date: '2020-01-15',\r\n        runtime: 45\r\n      })));\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"text-xl\">Loading TV show details...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!tvShow && !loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-12\">\r\n        <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-6\">\r\n          TV show not found or has been removed.\r\n        </div>\r\n        <Link to=\"/browse\" className=\"text-red-600 hover:underline\">\r\n          &larr; Back to Browse\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      {/* TV Show Backdrop */}\r\n      <div className=\"relative\">\r\n        <div \r\n          className=\"aspect-[21/9] bg-cover bg-center\"\r\n          style={{ backgroundImage: `url(${tvShow.backdrop_path})` }}\r\n        >\r\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black to-transparent\" />\r\n        </div>\r\n      </div>\r\n      \r\n      {/* TV Show Content */}\r\n      <div className=\"container mx-auto px-4 py-12\">\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-6\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"flex flex-col md:flex-row\">\r\n          {/* TV Show Poster */}\r\n          <div className=\"md:w-1/3 lg:w-1/4 mb-8 md:mb-0\">\r\n            <img \r\n              src={tvShow.poster_path} \r\n              alt={tvShow.name} \r\n              className=\"w-full rounded-lg shadow-lg\"\r\n            />\r\n          </div>\r\n          \r\n          {/* TV Show Info */}\r\n          <div className=\"md:w-2/3 lg:w-3/4 md:pl-8\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-2\">{tvShow.name}</h1>\r\n            \r\n            <div className=\"flex items-center mb-4 text-sm text-gray-600\">\r\n              <span className=\"mr-4\">{new Date(tvShow.first_air_date).getFullYear()}</span>\r\n              <span className=\"mr-4\">{tvShow.number_of_seasons} Seasons</span>\r\n              <span className=\"mr-4\">{tvShow.number_of_episodes} Episodes</span>\r\n              <span className=\"flex items-center text-yellow-500\">\r\n                <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\r\n                </svg>\r\n                {tvShow.vote_average} ({tvShow.vote_count} votes)\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              {tvShow.genres && tvShow.genres.map((genre, index) => (\r\n                <span \r\n                  key={index} \r\n                  className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\"\r\n                >\r\n                  {genre}\r\n                </span>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-xl font-bold mb-2\">Overview</h2>\r\n              <p className=\"text-gray-700\">{tvShow.overview}</p>\r\n            </div>\r\n            \r\n            {tvShow.created_by && tvShow.created_by.length > 0 && (\r\n              <div className=\"mb-6\">\r\n                <h2 className=\"text-xl font-bold mb-2\">Created By</h2>\r\n                <p className=\"text-gray-700\">{tvShow.created_by.join(', ')}</p>\r\n              </div>\r\n            )}\r\n            \r\n            {tvShow.cast && tvShow.cast.length > 0 && (\r\n              <div className=\"mb-6\">\r\n                <h2 className=\"text-xl font-bold mb-2\">Cast</h2>\r\n                <div className=\"flex flex-wrap\">\r\n                  {tvShow.cast.map((actor, index) => (\r\n                    <span \r\n                      key={index} \r\n                      className=\"inline-block bg-gray-100 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\"\r\n                    >\r\n                      {actor}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"flex space-x-3 mt-8\">\r\n              <button className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-md font-medium transition-colors\">\r\n                Watch Now\r\n              </button>\r\n              <button className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 px-6 py-2 rounded-md font-medium transition-colors\">\r\n                Add to Favorites\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Episodes Section */}\r\n        <div className=\"mt-16\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-2xl font-bold\">Episodes</h2>\r\n            \r\n            {/* Season Selector */}\r\n            <div className=\"flex items-center\">\r\n              <span className=\"mr-3 text-gray-700\">Season:</span>\r\n              <select \r\n                value={selectedSeason}\r\n                onChange={(e) => handleSeasonChange(parseInt(e.target.value))}\r\n                className=\"border border-gray-300 rounded-md shadow-sm focus:border-red-500 focus:ring-red-500\"\r\n              >\r\n                {seasons.map((seasonNum) => (\r\n                  <option key={seasonNum} value={seasonNum}>\r\n                    Season {seasonNum}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Episodes List */}\r\n          <div className=\"space-y-4\">\r\n            {episodes.map((episode) => (\r\n              <div \r\n                key={episode.episode_number} \r\n                className=\"bg-white rounded-lg shadow overflow-hidden\"\r\n              >\r\n                <div className=\"flex flex-col md:flex-row\">\r\n                  <div className=\"md:w-1/4\">\r\n                    <img \r\n                      src={episode.still_path}\r\n                      alt={`${tvShow.name} S${selectedSeason}E${episode.episode_number}`}\r\n                      className=\"w-full h-auto\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-4 md:w-3/4\">\r\n                    <div className=\"text-sm text-gray-500 mb-1\">\r\n                      S{selectedSeason} E{episode.episode_number} • {episode.runtime} min • {new Date(episode.air_date).toLocaleDateString()}\r\n                    </div>\r\n                    <h3 className=\"text-lg font-bold mb-2\">{episode.name}</h3>\r\n                    <p className=\"text-gray-600 text-sm\">{episode.overview}</p>\r\n                    <button className=\"mt-4 text-red-600 hover:text-red-700 font-medium flex items-center\">\r\n                      <svg className=\"w-5 h-5 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\"></path>\r\n                      </svg>\r\n                      Watch Episode\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Similar Shows */}\r\n        {similarShows.length > 0 && (\r\n          <div className=\"mt-16\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Similar Shows You Might Like</h2>\r\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-6\">\r\n              {similarShows.map((show) => (\r\n                <Link to={`/tv/${show.id}`} key={show.id} className=\"group\">\r\n                  <div className=\"relative overflow-hidden rounded-lg mb-2\">\r\n                    <img\r\n                      src={show.poster_path}\r\n                      alt={show.name}\r\n                      className=\"w-full h-auto transition-transform duration-300 group-hover:scale-105\"\r\n                    />\r\n                    <div className=\"absolute top-0 right-0 bg-black bg-opacity-75 text-yellow-400 p-1 text-sm\">\r\n                      ★ {show.vote_average}\r\n                    </div>\r\n                  </div>\r\n                  <h3 className=\"font-medium truncate\">{show.name}</h3>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TvShowDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}