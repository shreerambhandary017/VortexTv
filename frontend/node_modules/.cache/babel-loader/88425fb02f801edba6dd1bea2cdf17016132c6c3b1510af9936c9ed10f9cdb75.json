{"ast":null,"code":"/**\r\n * Environment-specific configuration\r\n * \r\n * This module provides configuration values based on the current environment (development, production, etc.)\r\n */\n\n// Get environment from process.env or fallback to development\nconst ENV = process.env.REACT_APP_ENV || process.env.NODE_ENV || 'development';\n\n// Base configurations for different environments\nconst configs = {\n  development: {\n    API_URL: 'http://localhost:5000/api',\n    TOKEN_EXPIRY_BUFFER: 5 * 60,\n    // 5 minutes in seconds\n    ENABLE_LOGGING: true,\n    TMDB_IMAGE_BASE_URL: 'https://image.tmdb.org/t/p',\n    TMDB_DEFAULT_POSTER_SIZE: 'w300',\n    TMDB_DEFAULT_BACKDROP_SIZE: 'w1280'\n  },\n  test: {\n    API_URL: 'http://localhost:5000/api',\n    TOKEN_EXPIRY_BUFFER: 5 * 60,\n    ENABLE_LOGGING: false,\n    TMDB_IMAGE_BASE_URL: 'https://image.tmdb.org/t/p',\n    TMDB_DEFAULT_POSTER_SIZE: 'w300',\n    TMDB_DEFAULT_BACKDROP_SIZE: 'w1280'\n  },\n  production: {\n    API_URL: process.env.REACT_APP_API_URL || 'https://api.vortextv.com/api',\n    TOKEN_EXPIRY_BUFFER: 10 * 60,\n    // 10 minutes in seconds (more conservative for production)\n    ENABLE_LOGGING: false,\n    TMDB_IMAGE_BASE_URL: 'https://image.tmdb.org/t/p',\n    TMDB_DEFAULT_POSTER_SIZE: 'w300',\n    TMDB_DEFAULT_BACKDROP_SIZE: 'w1280'\n  }\n};\n\n// Select the appropriate config based on current environment\nconst currentConfig = configs[ENV] || configs.development;\n\n// Override with environment variables if provided\nif (process.env.REACT_APP_API_URL) {\n  currentConfig.API_URL = process.env.REACT_APP_API_URL;\n}\n\n// Log the environment and configuration in non-production environments\nif (ENV !== 'production' && currentConfig.ENABLE_LOGGING) {\n  console.log(`Environment: ${ENV}`);\n  console.log('Configuration:', {\n    ...currentConfig,\n    // Don't log sensitive data\n    SENSITIVE_DATA: '[REDACTED]'\n  });\n}\n\n// Export the configuration\nexport default {\n  ...currentConfig,\n  ENV,\n  // Helper function to construct TMDB image URLs\n  getTMDBImageUrl: (path, size) => {\n    if (!path) return null;\n    const imageSize = size || currentConfig.TMDB_DEFAULT_POSTER_SIZE;\n    return `${currentConfig.TMDB_IMAGE_BASE_URL}/${imageSize}${path}`;\n  }\n};","map":{"version":3,"names":["ENV","process","env","REACT_APP_ENV","NODE_ENV","configs","development","API_URL","TOKEN_EXPIRY_BUFFER","ENABLE_LOGGING","TMDB_IMAGE_BASE_URL","TMDB_DEFAULT_POSTER_SIZE","TMDB_DEFAULT_BACKDROP_SIZE","test","production","REACT_APP_API_URL","currentConfig","console","log","SENSITIVE_DATA","getTMDBImageUrl","path","size","imageSize"],"sources":["D:/Movie/frontend/src/config/env.js"],"sourcesContent":["/**\r\n * Environment-specific configuration\r\n * \r\n * This module provides configuration values based on the current environment (development, production, etc.)\r\n */\r\n\r\n// Get environment from process.env or fallback to development\r\nconst ENV = process.env.REACT_APP_ENV || process.env.NODE_ENV || 'development';\r\n\r\n// Base configurations for different environments\r\nconst configs = {\r\n  development: {\r\n    API_URL: 'http://localhost:5000/api',\r\n    TOKEN_EXPIRY_BUFFER: 5 * 60, // 5 minutes in seconds\r\n    ENABLE_LOGGING: true,\r\n    TMDB_IMAGE_BASE_URL: 'https://image.tmdb.org/t/p',\r\n    TMDB_DEFAULT_POSTER_SIZE: 'w300',\r\n    TMDB_DEFAULT_BACKDROP_SIZE: 'w1280',\r\n  },\r\n  test: {\r\n    API_URL: 'http://localhost:5000/api',\r\n    TOKEN_EXPIRY_BUFFER: 5 * 60,\r\n    ENABLE_LOGGING: false,\r\n    TMDB_IMAGE_BASE_URL: 'https://image.tmdb.org/t/p',\r\n    TMDB_DEFAULT_POSTER_SIZE: 'w300',\r\n    TMDB_DEFAULT_BACKDROP_SIZE: 'w1280',\r\n  },\r\n  production: {\r\n    API_URL: process.env.REACT_APP_API_URL || 'https://api.vortextv.com/api',\r\n    TOKEN_EXPIRY_BUFFER: 10 * 60, // 10 minutes in seconds (more conservative for production)\r\n    ENABLE_LOGGING: false,\r\n    TMDB_IMAGE_BASE_URL: 'https://image.tmdb.org/t/p',\r\n    TMDB_DEFAULT_POSTER_SIZE: 'w300',\r\n    TMDB_DEFAULT_BACKDROP_SIZE: 'w1280',\r\n  }\r\n};\r\n\r\n// Select the appropriate config based on current environment\r\nconst currentConfig = configs[ENV] || configs.development;\r\n\r\n// Override with environment variables if provided\r\nif (process.env.REACT_APP_API_URL) {\r\n  currentConfig.API_URL = process.env.REACT_APP_API_URL;\r\n}\r\n\r\n// Log the environment and configuration in non-production environments\r\nif (ENV !== 'production' && currentConfig.ENABLE_LOGGING) {\r\n  console.log(`Environment: ${ENV}`);\r\n  console.log('Configuration:', { \r\n    ...currentConfig,\r\n    // Don't log sensitive data\r\n    SENSITIVE_DATA: '[REDACTED]'\r\n  });\r\n}\r\n\r\n// Export the configuration\r\nexport default {\r\n  ...currentConfig,\r\n  ENV,\r\n  // Helper function to construct TMDB image URLs\r\n  getTMDBImageUrl: (path, size) => {\r\n    if (!path) return null;\r\n    const imageSize = size || currentConfig.TMDB_DEFAULT_POSTER_SIZE;\r\n    return `${currentConfig.TMDB_IMAGE_BASE_URL}/${imageSize}${path}`;\r\n  }\r\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAIF,OAAO,CAACC,GAAG,CAACE,QAAQ,IAAI,aAAa;;AAE9E;AACA,MAAMC,OAAO,GAAG;EACdC,WAAW,EAAE;IACXC,OAAO,EAAE,2BAA2B;IACpCC,mBAAmB,EAAE,CAAC,GAAG,EAAE;IAAE;IAC7BC,cAAc,EAAE,IAAI;IACpBC,mBAAmB,EAAE,4BAA4B;IACjDC,wBAAwB,EAAE,MAAM;IAChCC,0BAA0B,EAAE;EAC9B,CAAC;EACDC,IAAI,EAAE;IACJN,OAAO,EAAE,2BAA2B;IACpCC,mBAAmB,EAAE,CAAC,GAAG,EAAE;IAC3BC,cAAc,EAAE,KAAK;IACrBC,mBAAmB,EAAE,4BAA4B;IACjDC,wBAAwB,EAAE,MAAM;IAChCC,0BAA0B,EAAE;EAC9B,CAAC;EACDE,UAAU,EAAE;IACVP,OAAO,EAAEN,OAAO,CAACC,GAAG,CAACa,iBAAiB,IAAI,8BAA8B;IACxEP,mBAAmB,EAAE,EAAE,GAAG,EAAE;IAAE;IAC9BC,cAAc,EAAE,KAAK;IACrBC,mBAAmB,EAAE,4BAA4B;IACjDC,wBAAwB,EAAE,MAAM;IAChCC,0BAA0B,EAAE;EAC9B;AACF,CAAC;;AAED;AACA,MAAMI,aAAa,GAAGX,OAAO,CAACL,GAAG,CAAC,IAAIK,OAAO,CAACC,WAAW;;AAEzD;AACA,IAAIL,OAAO,CAACC,GAAG,CAACa,iBAAiB,EAAE;EACjCC,aAAa,CAACT,OAAO,GAAGN,OAAO,CAACC,GAAG,CAACa,iBAAiB;AACvD;;AAEA;AACA,IAAIf,GAAG,KAAK,YAAY,IAAIgB,aAAa,CAACP,cAAc,EAAE;EACxDQ,OAAO,CAACC,GAAG,CAAC,gBAAgBlB,GAAG,EAAE,CAAC;EAClCiB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;IAC5B,GAAGF,aAAa;IAChB;IACAG,cAAc,EAAE;EAClB,CAAC,CAAC;AACJ;;AAEA;AACA,eAAe;EACb,GAAGH,aAAa;EAChBhB,GAAG;EACH;EACAoB,eAAe,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC/B,IAAI,CAACD,IAAI,EAAE,OAAO,IAAI;IACtB,MAAME,SAAS,GAAGD,IAAI,IAAIN,aAAa,CAACL,wBAAwB;IAChE,OAAO,GAAGK,aAAa,CAACN,mBAAmB,IAAIa,SAAS,GAAGF,IAAI,EAAE;EACnE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}