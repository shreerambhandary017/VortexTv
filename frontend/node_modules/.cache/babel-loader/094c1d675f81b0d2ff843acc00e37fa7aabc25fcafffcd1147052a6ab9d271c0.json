{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  // Check if token exists and is valid\n  const checkUserLoggedIn = async () => {\n    setIsLoading(true);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setIsLoading(false);\n      return;\n    }\n    try {\n      // Check if token is expired\n      const decoded = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp < currentTime) {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setUser(null);\n        setIsLoading(false);\n        return;\n      }\n\n      // Set headers with token\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Get current user data\n      const response = await axios.get('http://localhost:5000/api/users/me');\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n      console.error('Error checking authentication:', error);\n    }\n    setIsLoading(false);\n  };\n\n  // Register user\n  const register = async userData => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/register', userData);\n      localStorage.setItem('token', response.data.token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n      await checkUserLoggedIn();\n      navigate('/subscriptions');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', credentials);\n      localStorage.setItem('token', response.data.token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n      await checkUserLoggedIn();\n\n      // Redirect based on user role\n      if (user.role === 'admin' || user.role === 'superadmin') {\n        navigate('/admin');\n      } else {\n        navigate('/browse');\n      }\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  // Check if user has active subscription\n  const checkSubscription = async () => {\n    if (!isAuthenticated) return false;\n    try {\n      const response = await axios.get('http://localhost:5000/api/subscriptions/check');\n\n      // Update user data with subscription info\n      setUser(prevUser => ({\n        ...prevUser,\n        hasSubscription: response.data.hasSubscription,\n        hasAccessCode: response.data.hasAccessCode,\n        subscription: response.data.subscription\n      }));\n      return response.data.hasSubscription || response.data.hasAccessCode;\n    } catch (error) {\n      console.error('Error checking subscription:', error);\n      return false;\n    }\n  };\n\n  // Generate access code\n  const generateAccessCode = async () => {\n    if (!isAuthenticated || !user.hasSubscription) return {\n      success: false\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/access-codes/generate');\n      return {\n        success: true,\n        code: response.data.code\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to generate access code');\n      return {\n        success: false\n      };\n    }\n  };\n\n  // Redeem access code\n  const redeemAccessCode = async code => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/access-codes/redeem', {\n        code\n      });\n\n      // Update user data with access code info\n      setUser(prevUser => ({\n        ...prevUser,\n        hasAccessCode: true,\n        accessCode: response.data.accessCode\n      }));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data, _error$response5, _error$response5$data;\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to redeem access code');\n      return {\n        success: false,\n        error: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isLoading,\n      error,\n      register,\n      login,\n      logout,\n      checkSubscription,\n      generateAccessCode,\n      redeemAccessCode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"zLYyaohv+2jt6toekfB94sM7wlM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","axios","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","navigate","checkUserLoggedIn","token","localStorage","getItem","decoded","currentTime","Date","now","exp","removeItem","defaults","headers","common","response","get","data","console","register","userData","post","setItem","_error$response","_error$response$data","message","login","credentials","role","_error$response2","_error$response2$data","logout","checkSubscription","prevUser","hasSubscription","hasAccessCode","subscription","generateAccessCode","success","code","_error$response3","_error$response3$data","redeemAccessCode","accessCode","_error$response4","_error$response4$data","_error$response5","_error$response5$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Movie/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n// Create auth context\r\nexport const AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is already logged in on mount\r\n  useEffect(() => {\r\n    checkUserLoggedIn();\r\n  }, []);\r\n\r\n  // Check if token exists and is valid\r\n  const checkUserLoggedIn = async () => {\r\n    setIsLoading(true);\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Check if token is expired\r\n      const decoded = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      if (decoded.exp < currentTime) {\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Set headers with token\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Get current user data\r\n      const response = await axios.get('http://localhost:5000/api/users/me');\r\n      \r\n      setUser(response.data);\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      console.error('Error checking authentication:', error);\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', userData);\r\n      \r\n      localStorage.setItem('token', response.data.token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\r\n      \r\n      await checkUserLoggedIn();\r\n      navigate('/subscriptions');\r\n      return true;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Registration failed');\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (credentials) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', credentials);\r\n      \r\n      localStorage.setItem('token', response.data.token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\r\n      \r\n      await checkUserLoggedIn();\r\n      \r\n      // Redirect based on user role\r\n      if (user.role === 'admin' || user.role === 'superadmin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/browse');\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Login failed');\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  // Check if user has active subscription\r\n  const checkSubscription = async () => {\r\n    if (!isAuthenticated) return false;\r\n    \r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/subscriptions/check');\r\n      \r\n      // Update user data with subscription info\r\n      setUser(prevUser => ({\r\n        ...prevUser,\r\n        hasSubscription: response.data.hasSubscription,\r\n        hasAccessCode: response.data.hasAccessCode,\r\n        subscription: response.data.subscription\r\n      }));\r\n      \r\n      return response.data.hasSubscription || response.data.hasAccessCode;\r\n    } catch (error) {\r\n      console.error('Error checking subscription:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Generate access code\r\n  const generateAccessCode = async () => {\r\n    if (!isAuthenticated || !user.hasSubscription) return { success: false };\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/access-codes/generate');\r\n      return { success: true, code: response.data.code };\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Failed to generate access code');\r\n      return { success: false };\r\n    }\r\n  };\r\n\r\n  // Redeem access code\r\n  const redeemAccessCode = async (code) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/access-codes/redeem', { code });\r\n      \r\n      // Update user data with access code info\r\n      setUser(prevUser => ({\r\n        ...prevUser,\r\n        hasAccessCode: true,\r\n        accessCode: response.data.accessCode\r\n      }));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Failed to redeem access code');\r\n      return { success: false, error: error.response?.data?.message };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        isAuthenticated,\r\n        isLoading,\r\n        error,\r\n        register,\r\n        login,\r\n        logout,\r\n        checkSubscription,\r\n        generateAccessCode,\r\n        redeemAccessCode\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}