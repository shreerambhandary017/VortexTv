{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\components\\\\UI\\\\LoadingSpinner.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\r\n * LoadingSpinner Component\r\n * Displays a loading animation with optional message\r\n * \r\n * @param {Object} props - Component props\r\n * @param {boolean} props.fullScreen - Whether to display the spinner fullscreen\r\n * @param {string} props.message - Optional message to display with the spinner\r\n * @param {string} props.size - Size of the spinner (sm, md, lg)\r\n * @param {string} props.color - Color of the spinner\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  fullScreen = false,\n  message = 'Loading...',\n  size = 'md',\n  color = 'primary'\n}) => {\n  // Size classes\n  const sizeClasses = {\n    sm: 'w-6 h-6 border-2',\n    md: 'w-10 h-10 border-3',\n    lg: 'w-16 h-16 border-4'\n  };\n\n  // Color classes\n  const colorClasses = {\n    primary: 'border-t-blue-600',\n    secondary: 'border-t-gray-600',\n    success: 'border-t-green-600',\n    danger: 'border-t-red-600',\n    warning: 'border-t-yellow-600'\n  };\n\n  // Container classes based on fullScreen prop\n  const containerClasses = fullScreen ? 'fixed inset-0 flex flex-col items-center justify-center bg-white bg-opacity-80 z-50' : 'flex flex-col items-center justify-center py-4';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerClasses,\n    role: \"status\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `rounded-full border-gray-300 animate-spin ${sizeClasses[size]} ${colorClasses[color]}`,\n      \"aria-label\": \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3 text-gray-700 font-medium\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nLoadingSpinner.propTypes = {\n  fullScreen: PropTypes.bool,\n  message: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  color: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning'])\n};\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","LoadingSpinner","fullScreen","message","size","color","sizeClasses","sm","md","lg","colorClasses","primary","secondary","success","danger","warning","containerClasses","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","bool","string","oneOf","$RefreshReg$"],"sources":["D:/Movie/frontend/src/components/UI/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * LoadingSpinner Component\r\n * Displays a loading animation with optional message\r\n * \r\n * @param {Object} props - Component props\r\n * @param {boolean} props.fullScreen - Whether to display the spinner fullscreen\r\n * @param {string} props.message - Optional message to display with the spinner\r\n * @param {string} props.size - Size of the spinner (sm, md, lg)\r\n * @param {string} props.color - Color of the spinner\r\n */\r\nconst LoadingSpinner = ({ \r\n  fullScreen = false, \r\n  message = 'Loading...', \r\n  size = 'md', \r\n  color = 'primary' \r\n}) => {\r\n  // Size classes\r\n  const sizeClasses = {\r\n    sm: 'w-6 h-6 border-2',\r\n    md: 'w-10 h-10 border-3',\r\n    lg: 'w-16 h-16 border-4'\r\n  };\r\n\r\n  // Color classes\r\n  const colorClasses = {\r\n    primary: 'border-t-blue-600',\r\n    secondary: 'border-t-gray-600',\r\n    success: 'border-t-green-600',\r\n    danger: 'border-t-red-600',\r\n    warning: 'border-t-yellow-600'\r\n  };\r\n\r\n  // Container classes based on fullScreen prop\r\n  const containerClasses = fullScreen \r\n    ? 'fixed inset-0 flex flex-col items-center justify-center bg-white bg-opacity-80 z-50' \r\n    : 'flex flex-col items-center justify-center py-4';\r\n\r\n  return (\r\n    <div className={containerClasses} role=\"status\">\r\n      <div \r\n        className={`rounded-full border-gray-300 animate-spin ${sizeClasses[size]} ${colorClasses[color]}`} \r\n        aria-label=\"loading\"\r\n      />\r\n      {message && (\r\n        <p className=\"mt-3 text-gray-700 font-medium\">{message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingSpinner.propTypes = {\r\n  fullScreen: PropTypes.bool,\r\n  message: PropTypes.string,\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning'])\r\n};\r\n\r\nexport default LoadingSpinner; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,cAAc,GAAGA,CAAC;EACtBC,UAAU,GAAG,KAAK;EAClBC,OAAO,GAAG,YAAY;EACtBC,IAAI,GAAG,IAAI;EACXC,KAAK,GAAG;AACV,CAAC,KAAK;EACJ;EACA,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAE,kBAAkB;IACtBC,EAAE,EAAE,oBAAoB;IACxBC,EAAE,EAAE;EACN,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG;IACnBC,OAAO,EAAE,mBAAmB;IAC5BC,SAAS,EAAE,mBAAmB;IAC9BC,OAAO,EAAE,oBAAoB;IAC7BC,MAAM,EAAE,kBAAkB;IAC1BC,OAAO,EAAE;EACX,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGd,UAAU,GAC/B,qFAAqF,GACrF,gDAAgD;EAEpD,oBACEF,OAAA;IAAKiB,SAAS,EAAED,gBAAiB;IAACE,IAAI,EAAC,QAAQ;IAAAC,QAAA,gBAC7CnB,OAAA;MACEiB,SAAS,EAAE,6CAA6CX,WAAW,CAACF,IAAI,CAAC,IAAIM,YAAY,CAACL,KAAK,CAAC,EAAG;MACnG,cAAW;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACDpB,OAAO,iBACNH,OAAA;MAAGiB,SAAS,EAAC,gCAAgC;MAAAE,QAAA,EAAEhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GAtCIvB,cAAc;AAwCpBA,cAAc,CAACwB,SAAS,GAAG;EACzBvB,UAAU,EAAEJ,SAAS,CAAC4B,IAAI;EAC1BvB,OAAO,EAAEL,SAAS,CAAC6B,MAAM;EACzBvB,IAAI,EAAEN,SAAS,CAAC8B,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACzCvB,KAAK,EAAEP,SAAS,CAAC8B,KAAK,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;AACjF,CAAC;AAED,eAAe3B,cAAc;AAAC,IAAAuB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}