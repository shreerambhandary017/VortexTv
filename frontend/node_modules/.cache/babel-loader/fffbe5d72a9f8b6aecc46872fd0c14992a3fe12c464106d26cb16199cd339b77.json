{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login, logout, getCurrentUser, getSubscription, getUserProfile, register as apiRegister } from '../api/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [subscription, setSubscription] = useState(null);\n  const [profile, setProfile] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const userData = await getCurrentUser();\n          setUser(userData);\n\n          // Fetch subscription and profile data\n          try {\n            const subData = await getSubscription();\n            setSubscription(subData);\n          } catch (subError) {\n            console.error('Error fetching subscription:', subError);\n          }\n          try {\n            const profileData = await getUserProfile();\n            setProfile(profileData);\n          } catch (profileError) {\n            console.error('Error fetching profile:', profileError);\n          }\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const signIn = async (username, password) => {\n    try {\n      setError(null);\n      const userData = await login(username, password);\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await apiRegister(userData);\n      const {\n        token,\n        user\n      } = response;\n      localStorage.setItem('token', token);\n      setUser(user);\n      return user;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n      throw error;\n    }\n  };\n  const signOut = () => {\n    logout();\n    setUser(null);\n    setSubscription(null);\n    setProfile(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    subscription,\n    profile,\n    signIn,\n    signOut,\n    register,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"SayzsGPirY0sa8zJVUEHxV/wJ6M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","logout","getCurrentUser","getSubscription","getUserProfile","register","apiRegister","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","subscription","setSubscription","profile","setProfile","checkAuth","token","localStorage","getItem","userData","subData","subError","console","profileData","profileError","removeItem","signIn","username","password","_error$response","_error$response$data","response","data","message","setItem","_error$response2","_error$response2$data","signOut","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Movie/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { login, logout, getCurrentUser, getSubscription, getUserProfile, register as apiRegister } from '../api/backendApi';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [subscription, setSubscription] = useState(null);\r\n    const [profile, setProfile] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    const userData = await getCurrentUser();\r\n                    setUser(userData);\r\n                    \r\n                    // Fetch subscription and profile data\r\n                    try {\r\n                        const subData = await getSubscription();\r\n                        setSubscription(subData);\r\n                    } catch (subError) {\r\n                        console.error('Error fetching subscription:', subError);\r\n                    }\r\n                    \r\n                    try {\r\n                        const profileData = await getUserProfile();\r\n                        setProfile(profileData);\r\n                    } catch (profileError) {\r\n                        console.error('Error fetching profile:', profileError);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth check error:', error);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('refreshToken');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const signIn = async (username, password) => {\r\n        try {\r\n            setError(null);\r\n            const userData = await login(username, password);\r\n            setUser(userData);\r\n            return userData;\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || 'Login failed');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            setError(null);\r\n            const response = await apiRegister(userData);\r\n            const { token, user } = response;\r\n            localStorage.setItem('token', token);\r\n            setUser(user);\r\n            return user;\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || 'Registration failed');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const signOut = () => {\r\n        logout();\r\n        setUser(null);\r\n        setSubscription(null);\r\n        setProfile(null);\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        error,\r\n        subscription,\r\n        profile,\r\n        signIn,\r\n        signOut,\r\n        register,\r\n        isAuthenticated: !!user\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}