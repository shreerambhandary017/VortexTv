{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\context\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Toast from '../components/UI/Toast';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext({\n  showNotification: () => {},\n  clearNotifications: () => {}\n});\n\n/**\r\n * Provider component for notifications\r\n */\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n\n  // Add a new notification\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\n    const id = Date.now().toString();\n    setNotifications(prevNotifications => [...prevNotifications, {\n      id,\n      message,\n      type,\n      duration\n    }]);\n    return id;\n  }, []);\n\n  // Show success notification\n  const showSuccess = useCallback((message, duration) => {\n    return showNotification(message, 'success', duration);\n  }, [showNotification]);\n\n  // Show error notification\n  const showError = useCallback((message, duration) => {\n    return showNotification(message, 'error', duration);\n  }, [showNotification]);\n\n  // Show warning notification\n  const showWarning = useCallback((message, duration) => {\n    return showNotification(message, 'warning', duration);\n  }, [showNotification]);\n\n  // Show info notification\n  const showInfo = useCallback((message, duration) => {\n    return showNotification(message, 'info', duration);\n  }, [showNotification]);\n\n  // Remove a notification by ID\n  const removeNotification = useCallback(id => {\n    setNotifications(prevNotifications => prevNotifications.filter(notification => notification.id !== id));\n  }, []);\n\n  // Clear all notifications\n  const clearNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  // Context value\n  const value = {\n    showNotification,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    clearNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-container\",\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(Toast, {\n        message: notification.message,\n        type: notification.type,\n        duration: notification.duration,\n        position: `bottom-right`,\n        onClose: () => removeNotification(notification.id)\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"IjPXWM86XbNtNDzu8jMfBZ7JTqE=\");\n_c = NotificationProvider;\nNotificationProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\r\n * Custom hook to use notifications\r\n */\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default NotificationContext;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","PropTypes","Toast","jsxDEV","_jsxDEV","NotificationContext","showNotification","clearNotifications","NotificationProvider","children","_s","notifications","setNotifications","message","type","duration","id","Date","now","toString","prevNotifications","showSuccess","showError","showWarning","showInfo","removeNotification","filter","notification","value","Provider","className","map","index","position","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["D:/Movie/frontend/src/context/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Toast from '../components/UI/Toast';\r\n\r\n// Create context\r\nconst NotificationContext = createContext({\r\n  showNotification: () => {},\r\n  clearNotifications: () => {}\r\n});\r\n\r\n/**\r\n * Provider component for notifications\r\n */\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  // Add a new notification\r\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\r\n    const id = Date.now().toString();\r\n    \r\n    setNotifications(prevNotifications => [\r\n      ...prevNotifications,\r\n      { id, message, type, duration }\r\n    ]);\r\n    \r\n    return id;\r\n  }, []);\r\n\r\n  // Show success notification\r\n  const showSuccess = useCallback((message, duration) => {\r\n    return showNotification(message, 'success', duration);\r\n  }, [showNotification]);\r\n\r\n  // Show error notification\r\n  const showError = useCallback((message, duration) => {\r\n    return showNotification(message, 'error', duration);\r\n  }, [showNotification]);\r\n\r\n  // Show warning notification\r\n  const showWarning = useCallback((message, duration) => {\r\n    return showNotification(message, 'warning', duration);\r\n  }, [showNotification]);\r\n\r\n  // Show info notification\r\n  const showInfo = useCallback((message, duration) => {\r\n    return showNotification(message, 'info', duration);\r\n  }, [showNotification]);\r\n\r\n  // Remove a notification by ID\r\n  const removeNotification = useCallback((id) => {\r\n    setNotifications(prevNotifications => \r\n      prevNotifications.filter(notification => notification.id !== id)\r\n    );\r\n  }, []);\r\n\r\n  // Clear all notifications\r\n  const clearNotifications = useCallback(() => {\r\n    setNotifications([]);\r\n  }, []);\r\n\r\n  // Context value\r\n  const value = {\r\n    showNotification,\r\n    showSuccess,\r\n    showError,\r\n    showWarning,\r\n    showInfo,\r\n    clearNotifications\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={value}>\r\n      {children}\r\n      \r\n      {/* Render toasts */}\r\n      <div className=\"toast-container\">\r\n        {notifications.map((notification, index) => (\r\n          <Toast\r\n            key={notification.id}\r\n            message={notification.message}\r\n            type={notification.type}\r\n            duration={notification.duration}\r\n            position={`bottom-right`}\r\n            onClose={() => removeNotification(notification.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nNotificationProvider.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\n/**\r\n * Custom hook to use notifications\r\n */\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default NotificationContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}