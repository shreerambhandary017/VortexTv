{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\pages\\\\TvShowDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport tmdbApi, { getImageUrl } from '../api/tmdbApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TvShowDetails = () => {\n  _s();\n  var _tvShow$credits, _tvShow$credits$cast, _tvShow$vote_average, _tvShow$vote_count;\n  const {\n    id\n  } = useParams();\n  const [tvShow, setTvShow] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(1);\n  const [episodes, setEpisodes] = useState([]);\n  const [similarShows, setSimilarShows] = useState([]);\n  useEffect(() => {\n    // Scroll to top when component mounts\n    window.scrollTo(0, 0);\n    const fetchTvShowDetails = async () => {\n      try {\n        setLoading(true);\n        // Use tmdbApi directly for TV show details instead of axios\n        const tvData = await tmdbApi.getTvShowDetails(id);\n        if (!tvData) {\n          throw new Error('TV show details not found');\n        }\n        setTvShow(tvData);\n\n        // Set available seasons\n        if (tvData.number_of_seasons) {\n          setSeasons(Array.from({\n            length: tvData.number_of_seasons\n          }, (_, i) => i + 1));\n        }\n\n        // Fetch episodes for the first season by default\n        if (tvData.number_of_seasons > 0) {\n          try {\n            const seasonData = await tmdbApi.getTvSeasonDetails(id, 1);\n            if (seasonData && seasonData.episodes) {\n              setEpisodes(seasonData.episodes);\n            } else {\n              setEpisodes([]);\n            }\n          } catch (seasonErr) {\n            console.error('Error fetching season details:', seasonErr);\n            setEpisodes([]);\n          }\n        }\n\n        // Get similar shows from the recommendations or similar in the tvData\n        const similarData = await tmdbApi.getSimilarTvShows(id);\n        setSimilarShows(similarData.slice(0, 6));\n      } catch (err) {\n        console.error('Error fetching TV show details:', err);\n        setError('Failed to load TV show details. Please try again later.');\n\n        // Set dummy data for development/preview\n        setTvShow({\n          id: parseInt(id),\n          name: 'Sample TV Show',\n          poster_path: `https://via.placeholder.com/500x750?text=TV+Show+${id}`,\n          backdrop_path: `https://via.placeholder.com/1280x720?text=TV+Show+${id}+Backdrop`,\n          first_air_date: '2020-01-15',\n          last_air_date: '2023-05-10',\n          number_of_seasons: 3,\n          number_of_episodes: 24,\n          vote_average: 8.7,\n          vote_count: 1530,\n          genres: [{\n            id: 1,\n            name: 'Drama'\n          }, {\n            id: 2,\n            name: 'Sci-Fi'\n          }, {\n            id: 3,\n            name: 'Adventure'\n          }],\n          overview: 'This is a sample TV show overview. It would normally contain a description of the show premise and other relevant information.',\n          created_by: [{\n            name: 'Creator One'\n          }, {\n            name: 'Creator Two'\n          }],\n          credits: {\n            cast: [{\n              name: 'Actor One',\n              character: 'Character 1'\n            }, {\n              name: 'Actor Two',\n              character: 'Character 2'\n            }, {\n              name: 'Actor Three',\n              character: 'Character 3'\n            }, {\n              name: 'Actor Four',\n              character: 'Character 4'\n            }]\n          }\n        });\n\n        // Set dummy seasons\n        setSeasons([1, 2, 3]);\n\n        // Don't set dummy episodes - leave as empty array\n        setEpisodes([]);\n\n        // Set dummy similar shows\n        setSimilarShows(Array(6).fill().map((_, idx) => ({\n          id: 2000 + idx,\n          name: `Similar Show ${idx + 1}`,\n          poster_path: `https://via.placeholder.com/300x450?text=Similar+${idx + 1}`,\n          vote_average: (Math.random() * 2 + 7).toFixed(1)\n        })));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTvShowDetails();\n  }, [id]);\n  const handleSeasonChange = async seasonNumber => {\n    setSelectedSeason(seasonNumber);\n    try {\n      const seasonData = await tmdbApi.getTvSeasonDetails(id, seasonNumber);\n      console.log('Full season data:', seasonData);\n      if (seasonData && seasonData.episodes) {\n        // Log the still_path values for debugging\n        seasonData.episodes.forEach(episode => {\n          console.log(`Episode ${episode.episode_number} still_path:`, episode.still_path);\n        });\n        setEpisodes(seasonData.episodes);\n      } else {\n        setEpisodes([]);\n      }\n    } catch (err) {\n      console.error(`Error fetching episodes for season ${seasonNumber}:`, err);\n      setEpisodes([]);\n    }\n  };\n\n  // Helper to get image URL or fallback to the URL if it's already a full URL\n  const getImageWithFallback = (path, size = 'original') => {\n    if (!path) return null;\n    if (path.startsWith('http')) return path;\n    return getImageUrl(path, size);\n  };\n\n  // Extract cast members\n  const cast = (tvShow === null || tvShow === void 0 ? void 0 : (_tvShow$credits = tvShow.credits) === null || _tvShow$credits === void 0 ? void 0 : (_tvShow$credits$cast = _tvShow$credits.cast) === null || _tvShow$credits$cast === void 0 ? void 0 : _tvShow$credits$cast.slice(0, 10)) || [];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen bg-gray-900 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl p-8 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-pulse flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 border-4 border-red-600 border-t-transparent rounded-full animate-spin mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading TV show details...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n  if (!tvShow && !loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-12 bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900 border border-red-600 text-white px-4 py-3 rounded mb-6\",\n        children: \"TV show not found or has been removed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/browse\",\n        className: \"text-red-600 hover:underline\",\n        children: \"\\u2190 Back to Browse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aspect-[21/9] bg-cover bg-center\",\n        style: {\n          backgroundImage: `url(${getImageWithFallback(tvShow.backdrop_path)})`,\n          backgroundPosition: 'center 20%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-gradient-to-t from-gray-900 to-transparent opacity-90\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-12\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900 border border-red-600 text-white px-4 py-3 rounded mb-6\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:w-1/3 lg:w-1/4 mb-8 md:mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImageWithFallback(tvShow.poster_path, 'w500'),\n            alt: tvShow.name,\n            className: \"w-full rounded-lg shadow-lg\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = `https://via.placeholder.com/500x750?text=${encodeURIComponent(tvShow.name)}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:w-2/3 lg:w-3/4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl md:text-4xl font-bold mb-2\",\n            children: tvShow.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4 text-sm text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-4\",\n              children: new Date(tvShow.first_air_date).getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-4\",\n              children: [tvShow.number_of_seasons, \" Seasons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-4\",\n              children: [tvShow.number_of_episodes, \" Episodes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex items-center text-yellow-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 mr-1\",\n                fill: \"currentColor\",\n                viewBox: \"0 0 20 20\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), (_tvShow$vote_average = tvShow.vote_average) === null || _tvShow$vote_average === void 0 ? void 0 : _tvShow$vote_average.toFixed(1), \" (\", (_tvShow$vote_count = tvShow.vote_count) === null || _tvShow$vote_count === void 0 ? void 0 : _tvShow$vote_count.toLocaleString(), \" votes)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: tvShow.genres && tvShow.genres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block bg-gray-800 rounded-full px-3 py-1 text-sm font-semibold text-gray-300 mr-2 mb-2\",\n              children: genre.name\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300\",\n              children: tvShow.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), tvShow.created_by && tvShow.created_by.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Created By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300\",\n              children: tvShow.created_by.map(creator => creator.name).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), cast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-2\",\n              children: cast.map((actor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-300\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: actor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), actor.character && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"block text-sm text-gray-400\",\n                  children: [\"as \", actor.character]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/browse\",\n              className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md inline-flex items-center transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), \"Back to Browse\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), seasons.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold\",\n            children: \"Episodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-3 text-gray-400\",\n              children: \"Season:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedSeason,\n              onChange: e => handleSeasonChange(parseInt(e.target.value)),\n              className: \"bg-gray-800 border border-gray-700 rounded-md shadow-sm text-white focus:border-red-500 focus:ring-red-500\",\n              children: seasons.map(seasonNum => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: seasonNum,\n                children: [\"Season \", seasonNum]\n              }, seasonNum, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), episodes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: episodes.map(episode => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 rounded-lg shadow overflow-hidden border border-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col md:flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md:w-1/4 bg-gray-700 flex items-center justify-center overflow-hidden\",\n                children: episode.still_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://image.tmdb.org/t/p/w300${episode.still_path}`,\n                  alt: `${tvShow.name} S${selectedSeason}E${episode.episode_number}`,\n                  className: \"w-full h-auto object-cover\",\n                  onError: e => {\n                    console.log(`Image load error for episode ${episode.episode_number}, path: ${episode.still_path}`);\n                    e.target.onerror = null;\n                    e.target.src = `https://via.placeholder.com/500x282?text=S${selectedSeason}E${episode.episode_number}`;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col items-center justify-center py-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-12 h-12 text-gray-500 mb-2\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 1.5,\n                      d: \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: \"No image available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-600 text-xs mt-1\",\n                    children: [\"S\", selectedSeason, \"E\", episode.episode_number]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 md:w-3/4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-400 mb-1\",\n                  children: [\"S\", selectedSeason, \" E\", episode.episode_number, episode.runtime && ` • ${episode.runtime} min`, episode.air_date && ` • ${new Date(episode.air_date).toLocaleDateString()}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-bold mb-2 text-white\",\n                  children: episode.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-300 text-sm\",\n                  children: episode.overview || \"No overview available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mt-4 text-red-500 hover:text-red-400 font-medium flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-5 h-5 mr-1\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 20 20\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      fillRule: \"evenodd\",\n                      d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\",\n                      clipRule: \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 27\n                  }, this), \"Watch Episode\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)\n          }, episode.episode_number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 rounded-lg shadow p-6 text-center border border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-12 h-12 mx-auto text-gray-600 mb-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M7 4v16M17 4v16M3 8h18M3 16h18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-medium text-gray-300 mb-2\",\n            children: \"No episode information available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400\",\n            children: \"We couldn't find episode details for this season.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), similarShows.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6\",\n          children: \"Similar Shows You Might Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-6\",\n          children: similarShows.map(show => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tv/${show.id}`,\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative overflow-hidden rounded-lg mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: show.poster_path,\n                alt: show.name,\n                className: \"w-full h-auto transition-transform duration-300 group-hover:scale-105\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-0 right-0 bg-black bg-opacity-75 text-yellow-400 p-1 text-sm\",\n                children: [\"\\u2605 \", show.vote_average]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium truncate\",\n              children: show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, show.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(TvShowDetails, \"Xu6GcWF8sdy9HPTTY8ZKCaFEmaA=\", false, function () {\n  return [useParams];\n});\n_c = TvShowDetails;\nexport default TvShowDetails;\nvar _c;\n$RefreshReg$(_c, \"TvShowDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","tmdbApi","getImageUrl","jsxDEV","_jsxDEV","TvShowDetails","_s","_tvShow$credits","_tvShow$credits$cast","_tvShow$vote_average","_tvShow$vote_count","id","tvShow","setTvShow","loading","setLoading","error","setError","seasons","setSeasons","selectedSeason","setSelectedSeason","episodes","setEpisodes","similarShows","setSimilarShows","window","scrollTo","fetchTvShowDetails","tvData","getTvShowDetails","Error","number_of_seasons","Array","from","length","_","i","seasonData","getTvSeasonDetails","seasonErr","console","similarData","getSimilarTvShows","slice","err","parseInt","name","poster_path","backdrop_path","first_air_date","last_air_date","number_of_episodes","vote_average","vote_count","genres","overview","created_by","credits","cast","character","fill","map","idx","Math","random","toFixed","handleSeasonChange","seasonNumber","log","forEach","episode","episode_number","still_path","getImageWithFallback","path","size","startsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","style","backgroundImage","backgroundPosition","src","alt","onError","e","target","onerror","encodeURIComponent","Date","getFullYear","viewBox","d","toLocaleString","genre","creator","join","actor","index","xmlns","fillRule","clipRule","value","onChange","seasonNum","stroke","strokeLinecap","strokeLinejoin","strokeWidth","runtime","air_date","toLocaleDateString","show","_c","$RefreshReg$"],"sources":["D:/Movie/frontend/src/pages/TvShowDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport tmdbApi, { getImageUrl } from '../api/tmdbApi';\n\nconst TvShowDetails = () => {\n  const { id } = useParams();\n  const [tvShow, setTvShow] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(1);\n  const [episodes, setEpisodes] = useState([]);\n  const [similarShows, setSimilarShows] = useState([]);\n\n  useEffect(() => {\n    // Scroll to top when component mounts\n    window.scrollTo(0, 0);\n    \n    const fetchTvShowDetails = async () => {\n      try {\n        setLoading(true);\n        // Use tmdbApi directly for TV show details instead of axios\n        const tvData = await tmdbApi.getTvShowDetails(id);\n        \n        if (!tvData) {\n          throw new Error('TV show details not found');\n        }\n        \n        setTvShow(tvData);\n        \n        // Set available seasons\n        if (tvData.number_of_seasons) {\n          setSeasons(Array.from({ length: tvData.number_of_seasons }, (_, i) => i + 1));\n        }\n        \n        // Fetch episodes for the first season by default\n        if (tvData.number_of_seasons > 0) {\n          try {\n            const seasonData = await tmdbApi.getTvSeasonDetails(id, 1);\n            if (seasonData && seasonData.episodes) {\n              setEpisodes(seasonData.episodes);\n            } else {\n              setEpisodes([]);\n            }\n          } catch (seasonErr) {\n            console.error('Error fetching season details:', seasonErr);\n            setEpisodes([]);\n          }\n        }\n        \n        // Get similar shows from the recommendations or similar in the tvData\n        const similarData = await tmdbApi.getSimilarTvShows(id);\n        setSimilarShows(similarData.slice(0, 6));\n        \n      } catch (err) {\n        console.error('Error fetching TV show details:', err);\n        setError('Failed to load TV show details. Please try again later.');\n        \n        // Set dummy data for development/preview\n        setTvShow({\n          id: parseInt(id),\n          name: 'Sample TV Show',\n          poster_path: `https://via.placeholder.com/500x750?text=TV+Show+${id}`,\n          backdrop_path: `https://via.placeholder.com/1280x720?text=TV+Show+${id}+Backdrop`,\n          first_air_date: '2020-01-15',\n          last_air_date: '2023-05-10',\n          number_of_seasons: 3,\n          number_of_episodes: 24,\n          vote_average: 8.7,\n          vote_count: 1530,\n          genres: [\n            { id: 1, name: 'Drama' }, \n            { id: 2, name: 'Sci-Fi' }, \n            { id: 3, name: 'Adventure' }\n          ],\n          overview: 'This is a sample TV show overview. It would normally contain a description of the show premise and other relevant information.',\n          created_by: [{ name: 'Creator One' }, { name: 'Creator Two' }],\n          credits: {\n            cast: [\n              { name: 'Actor One', character: 'Character 1' },\n              { name: 'Actor Two', character: 'Character 2' },\n              { name: 'Actor Three', character: 'Character 3' },\n              { name: 'Actor Four', character: 'Character 4' }\n            ]\n          }\n        });\n        \n        // Set dummy seasons\n        setSeasons([1, 2, 3]);\n        \n        // Don't set dummy episodes - leave as empty array\n        setEpisodes([]);\n        \n        // Set dummy similar shows\n        setSimilarShows(Array(6).fill().map((_, idx) => ({\n          id: 2000 + idx,\n          name: `Similar Show ${idx + 1}`,\n          poster_path: `https://via.placeholder.com/300x450?text=Similar+${idx+1}`,\n          vote_average: (Math.random() * 2 + 7).toFixed(1)\n        })));\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchTvShowDetails();\n  }, [id]);\n\n  const handleSeasonChange = async (seasonNumber) => {\n    setSelectedSeason(seasonNumber);\n    \n    try {\n      const seasonData = await tmdbApi.getTvSeasonDetails(id, seasonNumber);\n      console.log('Full season data:', seasonData);\n      if (seasonData && seasonData.episodes) {\n        // Log the still_path values for debugging\n        seasonData.episodes.forEach(episode => {\n          console.log(`Episode ${episode.episode_number} still_path:`, episode.still_path);\n        });\n        setEpisodes(seasonData.episodes);\n      } else {\n        setEpisodes([]);\n      }\n    } catch (err) {\n      console.error(`Error fetching episodes for season ${seasonNumber}:`, err);\n      setEpisodes([]);\n    }\n  };\n\n  // Helper to get image URL or fallback to the URL if it's already a full URL\n  const getImageWithFallback = (path, size = 'original') => {\n    if (!path) return null;\n    if (path.startsWith('http')) return path;\n    return getImageUrl(path, size);\n  };\n\n  // Extract cast members\n  const cast = tvShow?.credits?.cast?.slice(0, 10) || [];\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-gray-900 text-white\">\n        <div className=\"text-xl p-8 rounded-lg\">\n          <div className=\"animate-pulse flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 border-red-600 border-t-transparent rounded-full animate-spin mb-4\"></div>\n            <p>Loading TV show details...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!tvShow && !loading) {\n    return (\n      <div className=\"container mx-auto px-4 py-12 bg-gray-900 text-white\">\n        <div className=\"bg-red-900 border border-red-600 text-white px-4 py-3 rounded mb-6\">\n          TV show not found or has been removed.\n        </div>\n        <Link to=\"/browse\" className=\"text-red-600 hover:underline\">\n          &larr; Back to Browse\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      {/* TV Show Backdrop */}\n      <div className=\"relative\">\n        <div \n          className=\"aspect-[21/9] bg-cover bg-center\"\n          style={{ \n            backgroundImage: `url(${getImageWithFallback(tvShow.backdrop_path)})`,\n            backgroundPosition: 'center 20%'\n          }}\n        >\n          <div className=\"absolute inset-0 bg-gradient-to-t from-gray-900 to-transparent opacity-90\" />\n        </div>\n      </div>\n      \n      {/* TV Show Content */}\n      <div className=\"container mx-auto px-4 py-12\">\n        {error && (\n          <div className=\"bg-red-900 border border-red-600 text-white px-4 py-3 rounded mb-6\">\n            {error}\n          </div>\n        )}\n        \n        <div className=\"flex flex-col md:flex-row gap-8\">\n          {/* TV Show Poster */}\n          <div className=\"md:w-1/3 lg:w-1/4 mb-8 md:mb-0\">\n            <img \n              src={getImageWithFallback(tvShow.poster_path, 'w500')} \n              alt={tvShow.name} \n              className=\"w-full rounded-lg shadow-lg\"\n              onError={(e) => {\n                e.target.onerror = null;\n                e.target.src = `https://via.placeholder.com/500x750?text=${encodeURIComponent(tvShow.name)}`;\n              }}\n            />\n          </div>\n          \n          {/* TV Show Info */}\n          <div className=\"md:w-2/3 lg:w-3/4\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-2\">{tvShow.name}</h1>\n            \n            <div className=\"flex items-center mb-4 text-sm text-gray-400\">\n              <span className=\"mr-4\">{new Date(tvShow.first_air_date).getFullYear()}</span>\n              <span className=\"mr-4\">{tvShow.number_of_seasons} Seasons</span>\n              <span className=\"mr-4\">{tvShow.number_of_episodes} Episodes</span>\n              <span className=\"flex items-center text-yellow-500\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\n                </svg>\n                {tvShow.vote_average?.toFixed(1)} ({tvShow.vote_count?.toLocaleString()} votes)\n              </span>\n            </div>\n            \n            <div className=\"mb-6\">\n              {tvShow.genres && tvShow.genres.map((genre) => (\n                <span \n                  key={genre.id} \n                  className=\"inline-block bg-gray-800 rounded-full px-3 py-1 text-sm font-semibold text-gray-300 mr-2 mb-2\"\n                >\n                  {genre.name}\n                </span>\n              ))}\n            </div>\n            \n            <div className=\"mb-6\">\n              <h2 className=\"text-xl font-bold mb-2\">Overview</h2>\n              <p className=\"text-gray-300\">{tvShow.overview}</p>\n            </div>\n            \n            {tvShow.created_by && tvShow.created_by.length > 0 && (\n              <div className=\"mb-6\">\n                <h2 className=\"text-xl font-bold mb-2\">Created By</h2>\n                <p className=\"text-gray-300\">{tvShow.created_by.map(creator => creator.name).join(', ')}</p>\n              </div>\n            )}\n            \n            {cast.length > 0 && (\n              <div className=\"mb-6\">\n                <h2 className=\"text-xl font-bold mb-2\">Cast</h2>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                  {cast.map((actor, index) => (\n                    <div key={index} className=\"text-gray-300\">\n                      <span className=\"font-medium\">{actor.name}</span>\n                      {actor.character && (\n                        <span className=\"block text-sm text-gray-400\">as {actor.character}</span>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            <div className=\"mt-8\">\n              <Link \n                to=\"/browse\" \n                className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md inline-flex items-center transition-colors\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n                Back to Browse\n              </Link>\n            </div>\n          </div>\n        </div>\n        \n        {/* Episodes Section - Only show if episodes are available */}\n        {seasons.length > 0 && (\n          <div className=\"mt-16\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-bold\">Episodes</h2>\n              \n              {/* Season Selector */}\n              <div className=\"flex items-center\">\n                <span className=\"mr-3 text-gray-400\">Season:</span>\n                <select \n                  value={selectedSeason}\n                  onChange={(e) => handleSeasonChange(parseInt(e.target.value))}\n                  className=\"bg-gray-800 border border-gray-700 rounded-md shadow-sm text-white focus:border-red-500 focus:ring-red-500\"\n                >\n                  {seasons.map((seasonNum) => (\n                    <option key={seasonNum} value={seasonNum}>\n                      Season {seasonNum}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            {/* Episodes List */}\n            {episodes.length > 0 ? (\n              <div className=\"space-y-4\">\n                {episodes.map((episode) => (\n                  <div \n                    key={episode.episode_number} \n                    className=\"bg-gray-800 rounded-lg shadow overflow-hidden border border-gray-700\"\n                  >\n                    <div className=\"flex flex-col md:flex-row\">\n                      {/* Use TMDB image path for episode stills, with proper null checking */}\n                      <div className=\"md:w-1/4 bg-gray-700 flex items-center justify-center overflow-hidden\">\n                        {episode.still_path ? (\n                          <img \n                            src={`https://image.tmdb.org/t/p/w300${episode.still_path}`}\n                            alt={`${tvShow.name} S${selectedSeason}E${episode.episode_number}`}\n                            className=\"w-full h-auto object-cover\"\n                            onError={(e) => {\n                              console.log(`Image load error for episode ${episode.episode_number}, path: ${episode.still_path}`);\n                              e.target.onerror = null;\n                              e.target.src = `https://via.placeholder.com/500x282?text=S${selectedSeason}E${episode.episode_number}`;\n                            }}\n                          />\n                        ) : (\n                          <div className=\"flex flex-col items-center justify-center py-6\">\n                            <svg className=\"w-12 h-12 text-gray-500 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                            </svg>\n                            <span className=\"text-gray-500 text-sm\">No image available</span>\n                            <span className=\"text-gray-600 text-xs mt-1\">S{selectedSeason}E{episode.episode_number}</span>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"p-4 md:w-3/4\">\n                        <div className=\"text-sm text-gray-400 mb-1\">\n                          S{selectedSeason} E{episode.episode_number} \n                          {episode.runtime && ` • ${episode.runtime} min`} \n                          {episode.air_date && ` • ${new Date(episode.air_date).toLocaleDateString()}`}\n                        </div>\n                        <h3 className=\"text-lg font-bold mb-2 text-white\">{episode.name}</h3>\n                        <p className=\"text-gray-300 text-sm\">{episode.overview || \"No overview available.\"}</p>\n                        <button className=\"mt-4 text-red-500 hover:text-red-400 font-medium flex items-center\">\n                          <svg className=\"w-5 h-5 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\"></path>\n                          </svg>\n                          Watch Episode\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"bg-gray-800 rounded-lg shadow p-6 text-center border border-gray-700\">\n                <svg className=\"w-12 h-12 mx-auto text-gray-600 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 4v16M17 4v16M3 8h18M3 16h18\" />\n                </svg>\n                <h3 className=\"text-xl font-medium text-gray-300 mb-2\">No episode information available</h3>\n                <p className=\"text-gray-400\">We couldn't find episode details for this season.</p>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Similar Shows */}\n        {similarShows.length > 0 && (\n          <div className=\"mt-16\">\n            <h2 className=\"text-2xl font-bold mb-6\">Similar Shows You Might Like</h2>\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-6\">\n              {similarShows.map((show) => (\n                <Link to={`/tv/${show.id}`} key={show.id} className=\"group\">\n                  <div className=\"relative overflow-hidden rounded-lg mb-2\">\n                    <img\n                      src={show.poster_path}\n                      alt={show.name}\n                      className=\"w-full h-auto transition-transform duration-300 group-hover:scale-105\"\n                    />\n                    <div className=\"absolute top-0 right-0 bg-black bg-opacity-75 text-yellow-400 p-1 text-sm\">\n                      ★ {show.vote_average}\n                    </div>\n                  </div>\n                  <h3 className=\"font-medium truncate\">{show.name}</h3>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TvShowDetails; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,OAAO,IAAIC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,oBAAA,EAAAC,kBAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA4B,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAErB,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFb,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAMc,MAAM,GAAG,MAAM5B,OAAO,CAAC6B,gBAAgB,CAACnB,EAAE,CAAC;QAEjD,IAAI,CAACkB,MAAM,EAAE;UACX,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;QAC9C;QAEAlB,SAAS,CAACgB,MAAM,CAAC;;QAEjB;QACA,IAAIA,MAAM,CAACG,iBAAiB,EAAE;UAC5Bb,UAAU,CAACc,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAEN,MAAM,CAACG;UAAkB,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/E;;QAEA;QACA,IAAIR,MAAM,CAACG,iBAAiB,GAAG,CAAC,EAAE;UAChC,IAAI;YACF,MAAMM,UAAU,GAAG,MAAMrC,OAAO,CAACsC,kBAAkB,CAAC5B,EAAE,EAAE,CAAC,CAAC;YAC1D,IAAI2B,UAAU,IAAIA,UAAU,CAAChB,QAAQ,EAAE;cACrCC,WAAW,CAACe,UAAU,CAAChB,QAAQ,CAAC;YAClC,CAAC,MAAM;cACLC,WAAW,CAAC,EAAE,CAAC;YACjB;UACF,CAAC,CAAC,OAAOiB,SAAS,EAAE;YAClBC,OAAO,CAACzB,KAAK,CAAC,gCAAgC,EAAEwB,SAAS,CAAC;YAC1DjB,WAAW,CAAC,EAAE,CAAC;UACjB;QACF;;QAEA;QACA,MAAMmB,WAAW,GAAG,MAAMzC,OAAO,CAAC0C,iBAAiB,CAAChC,EAAE,CAAC;QACvDc,eAAe,CAACiB,WAAW,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAE1C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZJ,OAAO,CAACzB,KAAK,CAAC,iCAAiC,EAAE6B,GAAG,CAAC;QACrD5B,QAAQ,CAAC,yDAAyD,CAAC;;QAEnE;QACAJ,SAAS,CAAC;UACRF,EAAE,EAAEmC,QAAQ,CAACnC,EAAE,CAAC;UAChBoC,IAAI,EAAE,gBAAgB;UACtBC,WAAW,EAAE,oDAAoDrC,EAAE,EAAE;UACrEsC,aAAa,EAAE,qDAAqDtC,EAAE,WAAW;UACjFuC,cAAc,EAAE,YAAY;UAC5BC,aAAa,EAAE,YAAY;UAC3BnB,iBAAiB,EAAE,CAAC;UACpBoB,kBAAkB,EAAE,EAAE;UACtBC,YAAY,EAAE,GAAG;UACjBC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE,CACN;YAAE5C,EAAE,EAAE,CAAC;YAAEoC,IAAI,EAAE;UAAQ,CAAC,EACxB;YAAEpC,EAAE,EAAE,CAAC;YAAEoC,IAAI,EAAE;UAAS,CAAC,EACzB;YAAEpC,EAAE,EAAE,CAAC;YAAEoC,IAAI,EAAE;UAAY,CAAC,CAC7B;UACDS,QAAQ,EAAE,gIAAgI;UAC1IC,UAAU,EAAE,CAAC;YAAEV,IAAI,EAAE;UAAc,CAAC,EAAE;YAAEA,IAAI,EAAE;UAAc,CAAC,CAAC;UAC9DW,OAAO,EAAE;YACPC,IAAI,EAAE,CACJ;cAAEZ,IAAI,EAAE,WAAW;cAAEa,SAAS,EAAE;YAAc,CAAC,EAC/C;cAAEb,IAAI,EAAE,WAAW;cAAEa,SAAS,EAAE;YAAc,CAAC,EAC/C;cAAEb,IAAI,EAAE,aAAa;cAAEa,SAAS,EAAE;YAAc,CAAC,EACjD;cAAEb,IAAI,EAAE,YAAY;cAAEa,SAAS,EAAE;YAAc,CAAC;UAEpD;QACF,CAAC,CAAC;;QAEF;QACAzC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QAErB;QACAI,WAAW,CAAC,EAAE,CAAC;;QAEf;QACAE,eAAe,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC1B,CAAC,EAAE2B,GAAG,MAAM;UAC/CpD,EAAE,EAAE,IAAI,GAAGoD,GAAG;UACdhB,IAAI,EAAE,gBAAgBgB,GAAG,GAAG,CAAC,EAAE;UAC/Bf,WAAW,EAAE,oDAAoDe,GAAG,GAAC,CAAC,EAAE;UACxEV,YAAY,EAAE,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEC,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,SAAS;QACRnD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDa,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACjB,EAAE,CAAC,CAAC;EAER,MAAMwD,kBAAkB,GAAG,MAAOC,YAAY,IAAK;IACjD/C,iBAAiB,CAAC+C,YAAY,CAAC;IAE/B,IAAI;MACF,MAAM9B,UAAU,GAAG,MAAMrC,OAAO,CAACsC,kBAAkB,CAAC5B,EAAE,EAAEyD,YAAY,CAAC;MACrE3B,OAAO,CAAC4B,GAAG,CAAC,mBAAmB,EAAE/B,UAAU,CAAC;MAC5C,IAAIA,UAAU,IAAIA,UAAU,CAAChB,QAAQ,EAAE;QACrC;QACAgB,UAAU,CAAChB,QAAQ,CAACgD,OAAO,CAACC,OAAO,IAAI;UACrC9B,OAAO,CAAC4B,GAAG,CAAC,WAAWE,OAAO,CAACC,cAAc,cAAc,EAAED,OAAO,CAACE,UAAU,CAAC;QAClF,CAAC,CAAC;QACFlD,WAAW,CAACe,UAAU,CAAChB,QAAQ,CAAC;MAClC,CAAC,MAAM;QACLC,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZJ,OAAO,CAACzB,KAAK,CAAC,sCAAsCoD,YAAY,GAAG,EAAEvB,GAAG,CAAC;MACzEtB,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAMmD,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,IAAI,GAAG,UAAU,KAAK;IACxD,IAAI,CAACD,IAAI,EAAE,OAAO,IAAI;IACtB,IAAIA,IAAI,CAACE,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOF,IAAI;IACxC,OAAOzE,WAAW,CAACyE,IAAI,EAAEC,IAAI,CAAC;EAChC,CAAC;;EAED;EACA,MAAMjB,IAAI,GAAG,CAAA/C,MAAM,aAANA,MAAM,wBAAAL,eAAA,GAANK,MAAM,CAAE8C,OAAO,cAAAnD,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBoD,IAAI,cAAAnD,oBAAA,uBAArBA,oBAAA,CAAuBoC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAI,EAAE;EAEtD,IAAI9B,OAAO,EAAE;IACX,oBACEV,OAAA;MAAK0E,SAAS,EAAC,sEAAsE;MAAAC,QAAA,eACnF3E,OAAA;QAAK0E,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrC3E,OAAA;UAAK0E,SAAS,EAAC,0CAA0C;UAAAC,QAAA,gBACvD3E,OAAA;YAAK0E,SAAS,EAAC;UAAuF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7G/E,OAAA;YAAA2E,QAAA,EAAG;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAACvE,MAAM,IAAI,CAACE,OAAO,EAAE;IACvB,oBACEV,OAAA;MAAK0E,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAClE3E,OAAA;QAAK0E,SAAS,EAAC,oEAAoE;QAAAC,QAAA,EAAC;MAEpF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/E,OAAA,CAACJ,IAAI;QAACoF,EAAE,EAAC,SAAS;QAACN,SAAS,EAAC,8BAA8B;QAAAC,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;EAEA,oBACE/E,OAAA;IAAK0E,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAElD3E,OAAA;MAAK0E,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvB3E,OAAA;QACE0E,SAAS,EAAC,kCAAkC;QAC5CO,KAAK,EAAE;UACLC,eAAe,EAAE,OAAOZ,oBAAoB,CAAC9D,MAAM,CAACqC,aAAa,CAAC,GAAG;UACrEsC,kBAAkB,EAAE;QACtB,CAAE;QAAAR,QAAA,eAEF3E,OAAA;UAAK0E,SAAS,EAAC;QAA2E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN/E,OAAA;MAAK0E,SAAS,EAAC,8BAA8B;MAAAC,QAAA,GAC1C/D,KAAK,iBACJZ,OAAA;QAAK0E,SAAS,EAAC,oEAAoE;QAAAC,QAAA,EAChF/D;MAAK;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED/E,OAAA;QAAK0E,SAAS,EAAC,iCAAiC;QAAAC,QAAA,gBAE9C3E,OAAA;UAAK0E,SAAS,EAAC,gCAAgC;UAAAC,QAAA,eAC7C3E,OAAA;YACEoF,GAAG,EAAEd,oBAAoB,CAAC9D,MAAM,CAACoC,WAAW,EAAE,MAAM,CAAE;YACtDyC,GAAG,EAAE7E,MAAM,CAACmC,IAAK;YACjB+B,SAAS,EAAC,6BAA6B;YACvCY,OAAO,EAAGC,CAAC,IAAK;cACdA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;cACvBF,CAAC,CAACC,MAAM,CAACJ,GAAG,GAAG,4CAA4CM,kBAAkB,CAAClF,MAAM,CAACmC,IAAI,CAAC,EAAE;YAC9F;UAAE;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGN/E,OAAA;UAAK0E,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC3E,OAAA;YAAI0E,SAAS,EAAC,qCAAqC;YAAAC,QAAA,EAAEnE,MAAM,CAACmC;UAAI;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAEtE/E,OAAA;YAAK0E,SAAS,EAAC,8CAA8C;YAAAC,QAAA,gBAC3D3E,OAAA;cAAM0E,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAE,IAAIgB,IAAI,CAACnF,MAAM,CAACsC,cAAc,CAAC,CAAC8C,WAAW,CAAC;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7E/E,OAAA;cAAM0E,SAAS,EAAC,MAAM;cAAAC,QAAA,GAAEnE,MAAM,CAACoB,iBAAiB,EAAC,UAAQ;YAAA;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChE/E,OAAA;cAAM0E,SAAS,EAAC,MAAM;cAAAC,QAAA,GAAEnE,MAAM,CAACwC,kBAAkB,EAAC,WAAS;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClE/E,OAAA;cAAM0E,SAAS,EAAC,mCAAmC;cAAAC,QAAA,gBACjD3E,OAAA;gBAAK0E,SAAS,EAAC,cAAc;gBAACjB,IAAI,EAAC,cAAc;gBAACoC,OAAO,EAAC,WAAW;gBAAAlB,QAAA,eACnE3E,OAAA;kBAAM8F,CAAC,EAAC;gBAA0V;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvW,CAAC,GAAA1E,oBAAA,GACLG,MAAM,CAACyC,YAAY,cAAA5C,oBAAA,uBAAnBA,oBAAA,CAAqByD,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,GAAAxD,kBAAA,GAACE,MAAM,CAAC0C,UAAU,cAAA5C,kBAAA,uBAAjBA,kBAAA,CAAmByF,cAAc,CAAC,CAAC,EAAC,SAC1E;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAEN/E,OAAA;YAAK0E,SAAS,EAAC,MAAM;YAAAC,QAAA,EAClBnE,MAAM,CAAC2C,MAAM,IAAI3C,MAAM,CAAC2C,MAAM,CAACO,GAAG,CAAEsC,KAAK,iBACxChG,OAAA;cAEE0E,SAAS,EAAC,+FAA+F;cAAAC,QAAA,EAExGqB,KAAK,CAACrD;YAAI,GAHNqD,KAAK,CAACzF,EAAE;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIT,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN/E,OAAA;YAAK0E,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnB3E,OAAA;cAAI0E,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpD/E,OAAA;cAAG0E,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEnE,MAAM,CAAC4C;YAAQ;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,EAELvE,MAAM,CAAC6C,UAAU,IAAI7C,MAAM,CAAC6C,UAAU,CAACtB,MAAM,GAAG,CAAC,iBAChD/B,OAAA;YAAK0E,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnB3E,OAAA;cAAI0E,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtD/E,OAAA;cAAG0E,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEnE,MAAM,CAAC6C,UAAU,CAACK,GAAG,CAACuC,OAAO,IAAIA,OAAO,CAACtD,IAAI,CAAC,CAACuD,IAAI,CAAC,IAAI;YAAC;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CACN,EAEAxB,IAAI,CAACxB,MAAM,GAAG,CAAC,iBACd/B,OAAA;YAAK0E,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnB3E,OAAA;cAAI0E,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChD/E,OAAA;cAAK0E,SAAS,EAAC,uCAAuC;cAAAC,QAAA,EACnDpB,IAAI,CAACG,GAAG,CAAC,CAACyC,KAAK,EAAEC,KAAK,kBACrBpG,OAAA;gBAAiB0E,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBACxC3E,OAAA;kBAAM0E,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEwB,KAAK,CAACxD;gBAAI;kBAAAiC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,EAChDoB,KAAK,CAAC3C,SAAS,iBACdxD,OAAA;kBAAM0E,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,GAAC,KAAG,EAACwB,KAAK,CAAC3C,SAAS;gBAAA;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CACzE;cAAA,GAJOqB,KAAK;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAED/E,OAAA;YAAK0E,SAAS,EAAC,MAAM;YAAAC,QAAA,eACnB3E,OAAA,CAACJ,IAAI;cACHoF,EAAE,EAAC,SAAS;cACZN,SAAS,EAAC,wGAAwG;cAAAC,QAAA,gBAElH3E,OAAA;gBAAKqG,KAAK,EAAC,4BAA4B;gBAAC3B,SAAS,EAAC,cAAc;gBAACmB,OAAO,EAAC,WAAW;gBAACpC,IAAI,EAAC,cAAc;gBAAAkB,QAAA,eACtG3E,OAAA;kBAAMsG,QAAQ,EAAC,SAAS;kBAACR,CAAC,EAAC,uIAAuI;kBAACS,QAAQ,EAAC;gBAAS;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrL,CAAC,kBAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLjE,OAAO,CAACiB,MAAM,GAAG,CAAC,iBACjB/B,OAAA;QAAK0E,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpB3E,OAAA;UAAK0E,SAAS,EAAC,wCAAwC;UAAAC,QAAA,gBACrD3E,OAAA;YAAI0E,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGhD/E,OAAA;YAAK0E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC3E,OAAA;cAAM0E,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnD/E,OAAA;cACEwG,KAAK,EAAExF,cAAe;cACtByF,QAAQ,EAAGlB,CAAC,IAAKxB,kBAAkB,CAACrB,QAAQ,CAAC6C,CAAC,CAACC,MAAM,CAACgB,KAAK,CAAC,CAAE;cAC9D9B,SAAS,EAAC,4GAA4G;cAAAC,QAAA,EAErH7D,OAAO,CAAC4C,GAAG,CAAEgD,SAAS,iBACrB1G,OAAA;gBAAwBwG,KAAK,EAAEE,SAAU;gBAAA/B,QAAA,GAAC,SACjC,EAAC+B,SAAS;cAAA,GADNA,SAAS;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEd,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGL7D,QAAQ,CAACa,MAAM,GAAG,CAAC,gBAClB/B,OAAA;UAAK0E,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBzD,QAAQ,CAACwC,GAAG,CAAES,OAAO,iBACpBnE,OAAA;YAEE0E,SAAS,EAAC,sEAAsE;YAAAC,QAAA,eAEhF3E,OAAA;cAAK0E,SAAS,EAAC,2BAA2B;cAAAC,QAAA,gBAExC3E,OAAA;gBAAK0E,SAAS,EAAC,uEAAuE;gBAAAC,QAAA,EACnFR,OAAO,CAACE,UAAU,gBACjBrE,OAAA;kBACEoF,GAAG,EAAE,kCAAkCjB,OAAO,CAACE,UAAU,EAAG;kBAC5DgB,GAAG,EAAE,GAAG7E,MAAM,CAACmC,IAAI,KAAK3B,cAAc,IAAImD,OAAO,CAACC,cAAc,EAAG;kBACnEM,SAAS,EAAC,4BAA4B;kBACtCY,OAAO,EAAGC,CAAC,IAAK;oBACdlD,OAAO,CAAC4B,GAAG,CAAC,gCAAgCE,OAAO,CAACC,cAAc,WAAWD,OAAO,CAACE,UAAU,EAAE,CAAC;oBAClGkB,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;oBACvBF,CAAC,CAACC,MAAM,CAACJ,GAAG,GAAG,6CAA6CpE,cAAc,IAAImD,OAAO,CAACC,cAAc,EAAE;kBACxG;gBAAE;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,gBAEF/E,OAAA;kBAAK0E,SAAS,EAAC,gDAAgD;kBAAAC,QAAA,gBAC7D3E,OAAA;oBAAK0E,SAAS,EAAC,8BAA8B;oBAACjB,IAAI,EAAC,MAAM;oBAACkD,MAAM,EAAC,cAAc;oBAACd,OAAO,EAAC,WAAW;oBAAAlB,QAAA,eACjG3E,OAAA;sBAAM4G,aAAa,EAAC,OAAO;sBAACC,cAAc,EAAC,OAAO;sBAACC,WAAW,EAAE,GAAI;sBAAChB,CAAC,EAAC;oBAA2J;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClO,CAAC,eACN/E,OAAA;oBAAM0E,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAC;kBAAkB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACjE/E,OAAA;oBAAM0E,SAAS,EAAC,4BAA4B;oBAAAC,QAAA,GAAC,GAAC,EAAC3D,cAAc,EAAC,GAAC,EAACmD,OAAO,CAACC,cAAc;kBAAA;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3F;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACN/E,OAAA;gBAAK0E,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B3E,OAAA;kBAAK0E,SAAS,EAAC,4BAA4B;kBAAAC,QAAA,GAAC,GACzC,EAAC3D,cAAc,EAAC,IAAE,EAACmD,OAAO,CAACC,cAAc,EACzCD,OAAO,CAAC4C,OAAO,IAAI,MAAM5C,OAAO,CAAC4C,OAAO,MAAM,EAC9C5C,OAAO,CAAC6C,QAAQ,IAAI,MAAM,IAAIrB,IAAI,CAACxB,OAAO,CAAC6C,QAAQ,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE;gBAAA;kBAAArC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzE,CAAC,eACN/E,OAAA;kBAAI0E,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAAER,OAAO,CAACxB;gBAAI;kBAAAiC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrE/E,OAAA;kBAAG0E,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAER,OAAO,CAACf,QAAQ,IAAI;gBAAwB;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACvF/E,OAAA;kBAAQ0E,SAAS,EAAC,oEAAoE;kBAAAC,QAAA,gBACpF3E,OAAA;oBAAK0E,SAAS,EAAC,cAAc;oBAACjB,IAAI,EAAC,cAAc;oBAACoC,OAAO,EAAC,WAAW;oBAAAlB,QAAA,eACnE3E,OAAA;sBAAMsG,QAAQ,EAAC,SAAS;sBAACR,CAAC,EAAC,yGAAyG;sBAACS,QAAQ,EAAC;oBAAS;sBAAA3B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5J,CAAC,iBAER;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GA1CDZ,OAAO,CAACC,cAAc;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA2CxB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN/E,OAAA;UAAK0E,SAAS,EAAC,sEAAsE;UAAAC,QAAA,gBACnF3E,OAAA;YAAK0E,SAAS,EAAC,sCAAsC;YAACjB,IAAI,EAAC,MAAM;YAACkD,MAAM,EAAC,cAAc;YAACd,OAAO,EAAC,WAAW;YAACQ,KAAK,EAAC,4BAA4B;YAAA1B,QAAA,eAC5I3E,OAAA;cAAM4G,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAE,CAAE;cAAChB,CAAC,EAAC;YAAgC;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrG,CAAC,eACN/E,OAAA;YAAI0E,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EAAC;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5F/E,OAAA;YAAG0E,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAiD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAGA3D,YAAY,CAACW,MAAM,GAAG,CAAC,iBACtB/B,OAAA;QAAK0E,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpB3E,OAAA;UAAI0E,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzE/E,OAAA;UAAK0E,SAAS,EAAC,8EAA8E;UAAAC,QAAA,EAC1FvD,YAAY,CAACsC,GAAG,CAAEwD,IAAI,iBACrBlH,OAAA,CAACJ,IAAI;YAACoF,EAAE,EAAE,OAAOkC,IAAI,CAAC3G,EAAE,EAAG;YAAemE,SAAS,EAAC,OAAO;YAAAC,QAAA,gBACzD3E,OAAA;cAAK0E,SAAS,EAAC,0CAA0C;cAAAC,QAAA,gBACvD3E,OAAA;gBACEoF,GAAG,EAAE8B,IAAI,CAACtE,WAAY;gBACtByC,GAAG,EAAE6B,IAAI,CAACvE,IAAK;gBACf+B,SAAS,EAAC;cAAuE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClF,CAAC,eACF/E,OAAA;gBAAK0E,SAAS,EAAC,2EAA2E;gBAAAC,QAAA,GAAC,SACvF,EAACuC,IAAI,CAACjE,YAAY;cAAA;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACN/E,OAAA;cAAI0E,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAEuC,IAAI,CAACvE;YAAI;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAXtBmC,IAAI,CAAC3G,EAAE;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYlC,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7E,EAAA,CA3XID,aAAa;EAAA,QACFN,SAAS;AAAA;AAAAwH,EAAA,GADpBlH,aAAa;AA6XnB,eAAeA,aAAa;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}