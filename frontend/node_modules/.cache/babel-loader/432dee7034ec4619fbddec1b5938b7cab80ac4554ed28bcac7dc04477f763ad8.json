{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport apiClient from '../services/api';\nimport { logout as apiLogout, refreshAuthToken } from '../api/backendApi';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  refreshToken: () => {},\n  loading: false,\n  error: null\n});\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n\n  // Check if the user is authenticated based on token\n  const isAuthenticated = !!token && !!user;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        if (storedToken) {\n          setToken(storedToken);\n          await fetchUserProfile(storedToken);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        logout();\n      } finally {\n        setInitialized(true);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Fetch the user profile using the token\n  const fetchUserProfile = async authToken => {\n    try {\n      setLoading(true);\n      const response = await apiClient.get('/user/profile', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      setError(error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = useCallback(async credentials => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Call the backendApi login function with credentials\n      const response = await apiLogout.login(credentials);\n      const {\n        access_token,\n        refresh_token,\n        user: userData\n      } = response.data;\n\n      // Store token in localStorage\n      if (access_token) {\n        localStorage.setItem('token', access_token);\n        if (refresh_token) {\n          localStorage.setItem('refresh_token', refresh_token);\n        }\n\n        // Update state\n        setToken(access_token);\n        setUser(userData);\n      }\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Failed to login';\n      setError(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Logout function\n  const logout = useCallback(async () => {\n    try {\n      // Call the API logout endpoint to revoke token on the server\n      await apiLogout();\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      // Always clear local state regardless of API success\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      setToken(null);\n      setUser(null);\n      setError(null);\n    }\n  }, []);\n\n  // Register function\n  const register = useCallback(async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await apiClient.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError(error.message || 'Failed to register');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Refresh token function\n  const refreshToken = useCallback(async () => {\n    try {\n      setLoading(true);\n      // Use the refreshAuthToken function from backendApi\n      const success = await refreshAuthToken();\n      if (success) {\n        // Get the new token from localStorage\n        const newToken = localStorage.getItem('token');\n        setToken(newToken);\n        return newToken;\n      }\n      throw new Error('Failed to refresh token');\n    } catch (error) {\n      console.error('Token refresh error:', error);\n      setError(error.message || 'Failed to refresh token');\n\n      // If refresh fails, log the user out\n      logout();\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [logout]);\n\n  // Context value\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    login,\n    logout,\n    register,\n    refreshToken,\n    loading,\n    error,\n    initialized\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"hG8tc133gILJAHFOs/22bCMf0NA=\");\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","PropTypes","apiClient","logout","apiLogout","refreshAuthToken","jsxDEV","_jsxDEV","AuthContext","user","token","isAuthenticated","login","register","refreshToken","loading","error","useAuth","_s","AuthProvider","children","_s2","setUser","setToken","localStorage","getItem","setLoading","setError","initialized","setInitialized","initializeAuth","storedToken","fetchUserProfile","console","authToken","response","get","headers","Authorization","data","message","credentials","access_token","refresh_token","userData","setItem","_error$response","_error$response$data","errorMessage","removeItem","post","success","newToken","Error","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["D:/Movie/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport apiClient from '../services/api';\nimport { logout as apiLogout, refreshAuthToken } from '../api/backendApi';\n\n// Create context\nconst AuthContext = createContext({\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  refreshToken: () => {},\n  loading: false,\n  error: null\n});\n\n// Custom hook to use the auth context\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n\n  // Check if the user is authenticated based on token\n  const isAuthenticated = !!token && !!user;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        if (storedToken) {\n          setToken(storedToken);\n          await fetchUserProfile(storedToken);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        logout();\n      } finally {\n        setInitialized(true);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Fetch the user profile using the token\n  const fetchUserProfile = async (authToken) => {\n    try {\n      setLoading(true);\n      const response = await apiClient.get('/user/profile', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      setError(error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = useCallback(async (credentials) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Call the backendApi login function with credentials\n      const response = await apiLogout.login(credentials);\n      \n      const { access_token, refresh_token, user: userData } = response.data;\n      \n      // Store token in localStorage\n      if (access_token) {\n        localStorage.setItem('token', access_token);\n        \n        if (refresh_token) {\n          localStorage.setItem('refresh_token', refresh_token);\n        }\n        \n        // Update state\n        setToken(access_token);\n        setUser(userData);\n      }\n      \n      return userData;\n    } catch (error) {\n      console.error('Login error:', error);\n      const errorMessage = error.response?.data?.message || error.message || 'Failed to login';\n      setError(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Logout function\n  const logout = useCallback(async () => {\n    try {\n      // Call the API logout endpoint to revoke token on the server\n      await apiLogout();\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      // Always clear local state regardless of API success\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      setToken(null);\n      setUser(null);\n      setError(null);\n    }\n  }, []);\n\n  // Register function\n  const register = useCallback(async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await apiClient.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError(error.message || 'Failed to register');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Refresh token function\n  const refreshToken = useCallback(async () => {\n    try {\n      setLoading(true);\n      // Use the refreshAuthToken function from backendApi\n      const success = await refreshAuthToken();\n      if (success) {\n        // Get the new token from localStorage\n        const newToken = localStorage.getItem('token');\n        setToken(newToken);\n        return newToken;\n      }\n      throw new Error('Failed to refresh token');\n    } catch (error) {\n      console.error('Token refresh error:', error);\n      setError(error.message || 'Failed to refresh token');\n      \n      // If refresh fails, log the user out\n      logout();\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [logout]);\n\n  // Context value\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    login,\n    logout,\n    register,\n    refreshToken,\n    loading,\n    error,\n    initialized\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default AuthProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}